{"version":3,"sources":["assets/absbg.png","components/AppLoader.tsx","utils/context.ts","components/AppButton.tsx","api/notes.ts","api/user.ts","utils/hooks.ts","components/VerticalSpacer.tsx","components/AppDrawer.tsx","components/icons/ArchiveIcon.tsx","components/icons/HomeIcon.tsx","components/icons/LogoutIcon.tsx","components/icons/TrashIcon.tsx","components/AppNav.tsx","components/icons/ErrorIcon.tsx","components/icons/SuccessIcon.tsx","components/FlagProvider.tsx","components/MainGraphic.tsx","components/PageWrapper.tsx","components/AppError.tsx","utils/types.ts","components/AppCard.tsx","components/ArchiveNote.tsx","components/icons/RestoreIcon.tsx","components/DeleteNote.tsx","components/icons/BookmarkIcon.tsx","components/PinNote.tsx","components/icons/PaletteIcon.tsx","components/UpdateColor.tsx","components/NoteCardFooter.tsx","components/NoteCard.tsx","components/CreateNote.tsx","components/ViewNote.tsx","components/NoteList.tsx","pages/Home.tsx","pages/Archive.tsx","components/BottomLink.tsx","components/FormCard.tsx","components/IntegratedLogo.tsx","pages/Login.tsx","pages/Signup.tsx","pages/Trash.tsx","routes/index.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/icon.svg","assets/integrated-logo.svg","assets/wordmark.svg"],"names":["module","exports","AppLoader","styled","div","AuthContext","createContext","isAuthenticated","setIsAuthenticated","useAuth","useContext","AuthProvider","Provider","FlagContext","addFlag","_options","useFlag","AppButton","Button","spacing","AppIconButton","NavButton","PrimaryButton","defaultFilters","archived","deleted","getAllNotes","a","filters","token","localStorage","getItem","client","get","process","query","set","response","body","createNote","data","post","send","updateNote","noteId","put","userLogin","catch","err","Error","message","setItem","user","userSignup","me","updateAvatar","useUpdateNoteMutation","options","useMutation","onSuccess","variables","addNoteToNoteList","removeNoteFromNoteList","pinned","updateNoteInNoteList","listKey","queryCache","setQueryData","notes","concat","map","note","id","filter","VerticalSpacer","props","size","DrawerWrapper","DrawerHeader","DrawerHelperText","colors","N200","DrawerPrimaryText","DrawerSecondaryText","B500","AvatarWrapper","StyledAvatar","AppDrawer","isOpen","onClose","ProfileDrawer","getQueryData","useState","avatar","randomAvatar","setRandomAvatar","isAvatarControlsOpen","setIsAvatarControlsOpen","update","isLoading","onClick","val","Avatar","src","appearance","then","url","console","log","shouldFitContainer","ButtonGroup","name","username","FilledIcon","xmlns","viewBox","fill","data-name","width","height","transform","opacity","d","OutlinedIcon","x","y","rx","ry","filled","glyph","label","NavContainer","N0","NavItems","AppNav","history","useHistory","pathname","useLocation","isDrawerOpen","setIsDrawerOpen","useWindowSize","href","style","marginRight","WordMark","LogoIcon","alt","iconBefore","HomeIcon","isSelected","push","ArchiveIcon","TrashIcon","Profile","tooltip","icon","removeItem","LogoutIcon","borderRadius","margin","cx","cy","r","primaryColor","G500","IconWrapper","span","FlagProvider","flags","setFlags","value","flag","children","onDismissed","slice","i","title","key","SuccessIcon","ErrorIcon","MainGraphicWrapper","BgImage","MainGraphicIcon","img","MainGraphic","PageWrapper","AsyncActionStatus","NoteActions","AppErrorContainer","R400","AppError","withIcon","UserActions","DrawerModes","NoteColors","TRANSPARENT","VIOLET","P75","INDIGO","B75","BLUE","T75","GREEN","G75","YELLOW","Y75","ORANGE","RED","R75","PINK","BROWN","AppCard","N50","AppCardFooter","ArchiveNote","toggleArchive","Tooltip","content","position","isDisabled","DeleteNote","toggleDelete","RestoreIcon","PinNote","togglePin","BookmarkIcon","Palette","Color","UpdateColor","setIsOpen","updateColor","handleColorClick","color","placement","Object","keys","backgroundColor","trigger","ref","triggerProps","innerRef","PaletteIcon","NoteCardFooter","isVisible","NoteTitle","h3","NoteBody","NoteCard","openView","onClickAway","appCardRef","useRef","useClickAway","useHover","hovered","className","split","text","CreateNoteWrapper","NoteInputContainer","ContentTextArea","TextArea","TitleTextInput","input","CreateNote","inputDivRef","setTitle","setContent","isTitleVisible","setIsTitleVisible","errorMsg","setErrorMsg","onError","reset","create","undefined","cursor","placeholder","onChange","e","target","onFocus","ViewNoteWrapper","N900","NoteCardContainer","ViewNote","noteCardContainerRef","persist","pageX","pageY","rect","current","getBoundingClientRect","top","bottom","left","right","listStyles","padding","display","gridGap","gridTemplateColumns","gridAutoRows","ListItem","ListLabel","NoteList","selectedNote","setselectedNote","gridRef","useEffect","Array","from","forEach","elem","item","grid","rowGap","parseInt","window","getComputedStyle","getPropertyValue","rowHeight","noteCard","querySelector","rowSpan","Math","ceil","gridRowEnd","resizeMasonryItem","HomeContainer","HelperText","HomePage","useQuery","refetchOnWindowFocus","error","length","ArchivePage","_key","BottomLink","FormCard","IntegratedLogoContainer","usernameRegex","loginFields","type","validate","test","helperMessage","LoginPage","login","IntegratedLogo","Form","onSubmit","password","formProps","noValidate","field","Field","isRequired","toLowerCase","defaultValue","fieldProps","autoComplete","to","emailRegex","signupFields","SignupPage","signup","email","TrashPage","AppRoutes","path","component","exact","PrivateRoute","PublicRoute","App","retry","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,mC,gUCI3C,IAAMC,EAAYC,UAAOC,IAAV,KAOA,oBACd,kBAACF,EAAD,KACC,kBAAC,IAAD,Q,4ECLWG,EAAcC,wBAA4B,CACtDC,iBAAiB,EACjBC,mBAAoB,eAGRC,EAAU,kBAAMC,qBAAWL,IAE3BM,EAAeN,EAAYO,SAM3BC,EAAcP,wBAA4B,CACtDQ,QAAS,SAACC,OAGEC,EAAU,kBAAMN,qBAAWG,I,ypBCrBjC,IAAMI,EAAYd,kBAAOe,IAAPf,CAAH,KAKN,kBAA6B,YAA7B,EAAGgB,SAAuC,gBAG7CC,EAAgBjB,kBAAOc,EAAPd,CAAH,KAUbkB,EAAYlB,kBAAOmB,IAAPnB,CAAH,K,8FCdhBoB,EAAiB,CAAEC,UAAU,EAAOC,SAAS,GAEtCC,EAAW,uCAAG,4CAAAC,EAAA,6DAAOC,EAAP,+BAAiCL,EACrDM,EAAQC,aAAaC,QAAQ,aADT,SAEHC,IACrBC,IADqB,UACdC,4BADc,WAErBC,MAAMP,GACNQ,IAAI,gBAAwBP,EAAK,iBAAaA,GAAU,IALhC,cAEpBQ,EAFoB,yBAMnBA,EAASC,MANU,2CAAH,qDASXC,EAAU,uCAAG,WAAOC,GAAP,iBAAAb,EAAA,6DACnBE,EAAQC,aAAaC,QAAQ,aADV,SAEFC,IACrBS,KADqB,UACbP,4BADa,kBAErBE,IAAI,gBAAwBP,EAAK,iBAAaA,GAAU,IACxDa,KAAKF,GALkB,cAEnBH,EAFmB,yBAOlBA,EAASC,MAPS,2CAAH,sDAUVK,EAAU,uCAAG,mCAAAhB,EAAA,6DAASiB,EAAT,EAASA,OAAWJ,EAApB,0BACnBX,EAAQC,aAAaC,QAAQ,aADV,SAEFC,IACrBa,IADqB,UACdX,4BADc,yBACgCU,IACrDR,IAAI,gBAAwBP,EAAK,iBAAaA,GAAU,IACxDa,KAAKF,GALkB,cAEnBH,EAFmB,yBAOlBA,EAASC,MAPS,2CAAH,sDC1BVQ,EAAS,uCAAG,WAAON,GAAP,eAAAb,EAAA,sEACDK,IACrBS,KADqB,UACbP,4BADa,gBAErBQ,KAAKF,GACLO,OAAM,SAACC,GACP,MAAM,IAAIC,MAAMD,EAAIX,SAASC,KAAKY,YALZ,cAClBb,EADkB,OAOxBP,aAAaqB,QAAQ,YAAad,EAASC,KAAKT,OAPxB,kBASjBQ,EAASC,KAAKc,MATG,2CAAH,sDAYTC,EAAU,uCAAG,WAAOb,GAAP,eAAAb,EAAA,sEACFK,IACrBS,KADqB,UACbP,4BADa,iBAErBQ,KAAKF,GACLO,OAAM,SAACC,GACP,MAAM,IAAIC,MAAMD,EAAIX,SAASC,KAAKY,YALX,cACnBb,EADmB,OAOzBP,aAAaqB,QAAQ,YAAad,EAASC,KAAKT,OAPvB,kBASlBQ,EAASC,KAAKc,MATI,2CAAH,sDAYVE,GAAE,uCAAG,8BAAA3B,EAAA,6DACXE,EAAQC,aAAaC,QAAQ,aADlB,SAEMC,IACrBC,IADqB,UACdC,4BADc,aAErBE,IAAI,gBAAwBP,EAAK,iBAAaA,GAAU,IACxDkB,OAAM,SAACC,GACP,MAAM,IAAIC,MAAMD,EAAIX,SAASC,KAAKY,YANnB,cAEXb,EAFW,yBASVA,EAASC,KAAKgB,IATJ,2CAAH,qDAYFC,GAAY,uCAAG,WAAOf,GAAP,iBAAAb,EAAA,6DACrBE,EAAQC,aAAaC,QAAQ,aADR,SAEJC,IACrBS,KADqB,UACbP,4BADa,iBAErBE,IAAI,gBAAwBP,EAAK,iBAAaA,GAAU,IACxDa,KAAKF,GACLO,OAAM,SAACC,GACP,MAAM,IAAIC,MAAMD,EAAIX,SAASC,KAAKY,YAPT,cAErBb,EAFqB,yBAUpBA,EAASC,MAVW,2CAAH,sDCyCZkB,GAAwB,SACpCC,GADoC,OAGpCC,YAAYf,EAAY,CACvBgB,UADuB,SACbnB,EAAMoB,GACf,QAAQ,GACP,IAAkC,qBAAtBA,EAAUnC,QACjBmC,EAAUnC,SACboC,GAAkB,CAAC,QAAS,CAAEpC,SAAS,IAASe,GAChDsB,GAAuB,QAAStB,GAChCsB,GAAuB,CAAC,QAAS,CAAEtC,UAAU,IAASgB,KAEtDqB,GAAkB,QAASrB,GAC3BsB,GAAuB,CAAC,QAAS,CAAErC,SAAS,IAASe,IAGtD,MAED,IAAmC,qBAAvBoB,EAAUpC,SACjBoC,EAAUpC,UACbqC,GAAkB,CAAC,QAAS,CAAErC,UAAU,IAASgB,GACjDsB,GAAuB,QAAStB,KAEhCqB,GAAkB,QAASrB,GAC3BsB,GAAuB,CAAC,QAAS,CAAEtC,UAAU,IAASgB,IAGvD,MAED,IAAiC,qBAArBoB,EAAUG,OACjBH,EAAUG,QACbD,GAAuB,QAAStB,GAChCqB,GAAkB,QAASrB,GAC3BsB,GAAuB,CAAC,QAAS,CAAEtC,UAAU,IAASgB,IAEtDwB,GAAqB,QAASxB,GAE/B,MAED,QACCwB,GAAqB,QAASxB,GAC9BwB,GAAqB,CAAC,QAAS,CAAExC,UAAU,IAASgB,IAE/C,OAAPiB,QAAO,IAAPA,OAAA,EAAAA,EAASE,YAAaF,EAAQE,UAAUnB,EAAMoB,OAI3CC,GAAoB,SAACI,EAAgCzB,GAC1D0B,IAAWC,aAAqBF,GAAS,SAACG,GAAD,aACxC,GAAC5B,IAAM6B,OAAP,oBAAkBD,GAAS,SAIvBJ,GAAuB,SAACC,EAAgCzB,GAC7D0B,IAAWC,aAAqBF,GAAS,SAACG,GAAD,cACxCA,QADwC,IACxCA,OADwC,EACxCA,EAAOE,KAAI,SAACC,GAAD,OAAWA,EAAKC,KAAOhC,EAAKgC,GAAKD,EAAO/B,SAI/CsB,GAAyB,SAACG,EAAgCzB,GAC/D0B,IAAWC,aAAqBF,GAAS,SAACG,GAAD,cACxCA,QADwC,IACxCA,OADwC,EACxCA,EAAOK,QAAO,SAACF,GAAD,OAAUA,EAAKC,KAAOhC,EAAKgC,U,+GC3IpC,IAAME,GAAiBvE,UAAOC,IAAV,MAEhB,SAACuE,GAAD,OAAWA,EAAMC,MAAQ,M,ogCCS7B,IAAMC,GAAgB1E,UAAOC,IAAV,MASb0E,GAAe3E,UAAOC,IAAV,MAUZ2E,GAAmB5E,UAAOC,IAAV,KAGnB4E,IAAOC,MAGJC,GAAoB/E,UAAOC,IAAV,MAIjB+E,GAAsBhF,UAAOC,IAAV,KACtB4E,IAAOI,MAIJC,GAAgBlF,UAAOC,IAAV,MAMbkF,GAAenF,UAAOC,IAAV,MASZmF,GAAY,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QACnC,OACC,kBAAC,IAAD,CAAQD,OAAQA,EAAQC,QAASA,GAChC,kBAACZ,GAAD,KACC,kBAACC,GAAD,gBACA,kBAAC,GAAD,MACA,iCAMSY,GAAgB,WAC5B,IAAMtC,EAAOc,IAAWyB,aAA+B,MADrB,EAEMC,mBAAQ,OAACxC,QAAD,IAACA,OAAD,EAACA,EAAMyC,QAFrB,mBAE3BC,EAF2B,KAEbC,EAFa,OAGsBH,oBAAS,GAH/B,mBAG3BI,EAH2B,KAGLC,EAHK,OF5BlCvC,YAAYH,GAAc,CACzBI,UAAW,SAACnB,GAAD,OAAU0B,IAAWC,aAAa,KAAM3B,ME2BlB,mBAI3B0D,EAJ2B,KAIjBC,EAJiB,KAIjBA,UAejB,OACC,kBAACd,GAAD,KACC,kBAACC,GAAD,CAAcc,QAfa,kBAAMH,GAAwB,SAACI,GAAD,OAAUA,OAgBlE,kBAACC,EAAA,EAAD,CAAQC,IAAKT,EAAclB,KAAK,aAEjC,kBAACF,GAAD,CAAgBE,KAAM,KACrBoB,EACA,kBAAC,WAAD,KACC,kBAAC/E,EAAD,CACCuF,WAAW,UACXrF,QAAQ,UACRiF,QAtBmB,kBACvBpE,IACEC,IADF,UACSC,4BADT,mBAEEuE,MAAK,gBAAWC,EAAX,EAAGpE,KAAQoE,IAAX,OAAuBX,EAAgBW,MAC5C3D,MAAM4D,QAAQC,MAmBZC,oBAAkB,GAJnB,UAQA,kBAACnC,GAAD,CAAgBE,KAAM,KACtB,kBAACkC,EAAA,EAAD,KACC,kBAAC7F,EAAD,CACCuF,WAAW,UACXrF,QAAQ,UACRiF,QA1Be,WACpBF,EAAO,CAAEL,OAAQC,IACjBG,GAAwB,IAyBnBE,UAAWA,GAJZ,QAQA,kBAAClF,EAAD,CACCuF,WAAW,SACXrF,QAAQ,UACRiF,QAAS,kBAAML,EAAe,OAAC3C,QAAD,IAACA,OAAD,EAACA,EAAMyC,UAHtC,aAUF,kBAACd,GAAD,kCAED,kBAACL,GAAD,CAAgBE,KAAM,KACtB,kBAACM,GAAD,YAAoB9B,QAApB,IAAoBA,OAApB,EAAoBA,EAAM2D,MAC1B,kBAACrC,GAAD,CAAgBE,KAAM,IACtB,kBAACO,GAAD,gBAAuB/B,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAM4D,Y,oBClI1BC,GAAa,kBAClB,yBACCC,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,WACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKC,UAAU,mBAAmBC,QAAQ,MAClE,0BAAMC,EAAE,0OAMNC,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,WACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKC,UAAU,mBAAmBC,QAAQ,MAClE,0BAAMC,EAAE,kLACR,0BAAME,EAAE,IAAIC,EAAE,KAAKP,MAAM,IAAIC,OAAO,IAAIO,GAAG,MAAMC,GAAG,YAMzC,mBAAGC,EAAH,EAAGA,OAAH,OACd,kBAAC,KAAD,CAAMC,MAASD,EAASf,GAAaU,GAAcO,MAAM,aChCpDjB,GAAa,kBAClB,yBACCC,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,QACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMG,EAAE,KAAKC,EAAE,KAAKP,MAAM,IAAIC,OAAO,MACrC,0BAAMG,EAAE,2LAMNC,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,QACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,sOAMG,mBAAGM,EAAH,EAAGA,OAAH,OACd,kBAAC,KAAD,CAAMC,MAAOD,EAASf,GAAaU,GAAcO,MAAM,UCjClDP,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,WACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKC,UAAU,mBAAmBC,QAAQ,MAClE,0BAAMC,EAAE,6EACR,0BAAMA,EAAE,+KAMG,qBAAM,kBAAC,KAAD,CAAMO,MAAON,GAAcO,MAAM,UCfhDjB,GAAa,kBAClB,yBACCC,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,SACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,oMAMNC,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,SACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,8OAMG,mBAAGM,EAAH,EAAGA,OAAH,OACd,kBAAC,KAAD,CAAMC,MAAOD,EAASf,GAAaU,GAAcO,MAAM,U,2YCjBxD,IAAMC,GAAehI,UAAOC,IAAV,KASG4E,IAAOoD,IAGtBC,GAAWlI,UAAOC,IAAV,MAMDkI,GAAS,WACrB,IAAMC,EAAUC,cACRC,EAAaC,cAAbD,SAFmB,EAGa7C,oBAAS,GAHtB,mBAGpB+C,EAHoB,KAGNC,EAHM,OAIqBnI,IAAxCD,EAJmB,EAInBA,mBAAoBD,EAJD,EAICA,gBACpB+G,EAAUuB,cAAVvB,MACJ9E,EAAyB0B,IAAWyB,aAAa,MAOrD,OACC,kBAACwC,GAAD,KACC,kBAACE,GAAD,KACC,uBAAGS,KAAK,kCAAkCC,MAAO,CAAEC,YAAa,KAC/D,yBACCzC,IAAKe,EAAQ,KAAO2B,IAAWC,IAC/BC,IAAI,YACJ5B,OAAO,UAGT,kBAAClG,EAAD,CACC+H,WAAY,kBAACC,GAAD,CAAUrB,OAAqB,MAAbS,IAC9Ba,WAAyB,MAAbb,EACZrC,QAAS,kBAAMmC,EAAQgB,KAAK,OAH7B,QAOA,kBAAClI,EAAD,CACC+H,WAAY,kBAACI,GAAD,CAAaxB,OAAqB,aAAbS,IACjCrC,QAAS,kBAAMmC,EAAQgB,KAAK,aAC5BD,WAAyB,aAAbb,GAHb,WAOA,kBAACpH,EAAD,CACC+H,WAAY,kBAACK,GAAD,CAAWzB,OAAqB,WAAbS,IAC/Ba,WAAyB,WAAbb,EACZrC,QAAS,kBAAMmC,EAAQgB,KAAK,YAH7B,UAQD,kBAAClB,GAAD,KACC,kBAACqB,EAAA,EAAD,CACCtD,QAAS,kBAAMwC,GAAgB,IAC/Be,QAAQ,UACRC,KAAM,yBAAKrD,IAAG,OAAE/D,QAAF,IAAEA,OAAF,EAAEA,EAAMqD,OAAQsD,IAAI,SAAS7B,MAAO,GAAIC,OAAQ,OAE/D,kBAAClG,EAAD,CACCsI,QAAQ,SACRvD,QA7CiB,WACpBtE,aAAa+H,WAAW,aACxBrJ,GAAoBD,IA4CjB6I,WAAY,kBAACU,GAAD,MACZf,MAAO,CAAEzB,MAAO,GAAIyC,aAAc,MAAOC,OAAQ,MAGnD,kBAAC,GAAD,CAAWxE,OAAQmD,EAAclD,QAAS,kBAAMmD,GAAgB,Q,mBC3F7DjB,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,gBACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,gFACR,4BAAQuC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,0BAAMzC,EAAE,6DAMG,qBAAM,kBAAC,KAAD,CAAMO,MAAON,GAAcO,MAAM,WChBhDP,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,oBACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,2GACR,0BAAMA,EAAE,gOAMG,qBACd,kBAAC,KAAD,CAAMO,MAAON,GAAcO,MAAM,UAAUkC,aAAcpF,IAAOqF,Q,mLCbjE,IAAMC,GAAcnK,UAAOoK,KAAV,MAYJC,GAAe,SAAC7F,GAAoC,IAAD,EACrCiB,mBAAqB,IADgB,mBACxD6E,EADwD,KACjDC,EADiD,KAM/D,OACC,kBAAC7J,EAAYD,SAAb,CAAsB+J,MAAO,CAAE7J,QAHhB,SAAC8J,GAAD,OAAoBF,EAAS,CAACE,GAAF,mBAAWH,QAIpD9F,EAAMkG,SACP,kBAAC,KAAD,CAAWC,YANO,kBAAMJ,EAASD,EAAMM,MAAM,MAO3CN,EAAMnG,KAAI,WAAwB0G,GAAxB,IAAGxE,EAAH,EAAGA,WAAYyE,EAAf,EAAeA,MAAf,OACV,kBAAC,KAAD,CACCA,MAAOA,EACPzG,GAAIwG,EAAI,OACRE,IAAKF,EAAI,OACTpB,KACC,kBAACU,GAAD,KACiB,YAAf9D,EAA2B,kBAAC2E,GAAD,MAAkB,kBAACC,GAAD,e,yZChC/C,IAAMC,GAAqBlL,UAAOC,IAAV,KAGNkL,MAMZC,GAAkBpL,UAAOqL,IAAV,MAOfC,GAAc,kBAC1B,kBAACJ,GAAD,KACC,kBAACE,GAAD,CAAiBhF,IAAK2C,Q,oNCrBjB,IAAMwC,GAAcvL,UAAOC,IAAV,M,6NCIjB,ICJKuL,GAOAC,GDHCC,GAAoB1L,UAAOC,IAAV,KACpB4E,IAAO8G,MAQJC,GAAW,SAACpH,GAAD,OAIvB,kBAACkH,GAAD,KACElH,EAAMqH,UAAY,kBAAC,KAAD,CAAW9D,MAAM,QAAQtD,KAAK,WAChDD,EAAMqH,UAAY,kBAACtH,GAAD,CAAgBE,KAAM,IACxCD,EAAMkG,W,8BCpBGc,K,YAAAA,E,kBAAAA,E,sBAAAA,E,iBAAAA,Q,cAOAC,K,0BAAAA,E,2BAAAA,E,2BAAAA,E,oCAAAA,E,kCAAAA,E,6BAAAA,E,qBAAAA,E,yBAAAA,E,iCAAAA,E,2BAAAA,E,8BAAAA,Q,KAcL,IAqDKK,GAkCAC,GAvFCC,GAAqC,CACjDC,YAAapH,IAAOoD,GACpBiE,OAAQrH,IAAOsH,IACfC,OAAQvH,IAAOwH,IACfC,KAAMzH,IAAO0H,IACbC,MAAO3H,IAAO4H,IACdC,OAAQ7H,IAAO8H,IACfC,OAAQ,UACRC,IAAKhI,IAAOiI,IACZC,KAAM,UACNC,MAAO,W,waA2CIlB,K,mBAAAA,E,qBAAAA,E,aAAAA,E,qBAAAA,E,6BAAAA,Q,cAkCAC,K,kBAAAA,E,oBAAAA,E,iBAAAA,Q,KC3GL,IAAMkB,GAAUjN,UAAOC,IAAV,KAEC4E,IAAOqI,IAGPrI,IAAOoD,IAIfkF,GAAgBnN,UAAOC,IAAV,M,UCAbmN,GAAc,SAAC,GAA4C,IAA1C3K,EAAyC,EAAzCA,OAAQpB,EAAiC,EAAjCA,SAC7BV,EAAYE,IAAZF,QAD8D,EAE/B0C,GAAsB,CAC5DG,UAAW,SAACnB,GAAD,OACV1B,EAAQ,CACPmK,MAAM,QAAD,OAAUzI,EAAKhB,SAAW,WAAa,aAAvC,KACLgF,WAAY,eANuD,mBAE/DgH,EAF+D,KAE9CrH,EAF8C,KAE9CA,UAQxB,OACC,kBAACsH,GAAA,EAAD,CACCC,QAAO,UAAKlM,EAAW,YAAc,UAA9B,SACPmM,SAAS,UAET,kBAACvM,EAAD,CACCD,QAAQ,OACRiI,WAAY,kBAACI,GAAD,CAAaxB,OAAQxG,IACjCgF,WAAW,SACXL,UAAWA,EACXyH,WAAYzH,EACZC,QAAS,kBAAMoH,EAAc,CAAE5K,SAAQpB,UAAWA,SC9BhDmG,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,WACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,+bAMG,qBAAM,kBAAC,KAAD,CAAMO,MAAON,GAAcO,MAAM,aCLzC2F,GAAa,SAAC,GAA0C,IAAxCjL,EAAuC,EAAvCA,OAAQnB,EAA+B,EAA/BA,QAC5BX,EAAYE,IAAZF,QAD2D,EAE7B0C,GAAsB,CAC3DG,UAAW,SAACnB,GAAD,OACV1B,EAAQ,CACPmK,MAAM,QAAD,OAAUzI,EAAKf,QAAU,iBAAmB,WAA5C,KACL+E,WAAY,eANoD,mBAE5DsH,EAF4D,KAE5C3H,EAF4C,KAE5CA,UAUvB,OACC,kBAACsH,GAAA,EAAD,CACCC,QAAO,UAAKjM,EAAU,UAAY,SAA3B,SACPkM,SAAS,UAET,kBAACvM,EAAD,CACCD,QAAQ,OACRiI,WAAY3H,EAAU,kBAACsM,GAAD,MAAkB,kBAACtE,GAAD,MACxCjD,WAAW,SACXL,UAAWA,EACXyH,WAAYzH,EACZC,QAbiB,kBAAM0H,EAAa,CAAElL,SAAQnB,SAAUA,SCnBtDwF,GAAa,kBAClB,yBACCC,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,YACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,2KAMNC,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,YACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,4UAMG,mBAAGM,EAAH,EAAGA,OAAH,OACd,kBAAC,KAAD,CAAMC,MAAOD,EAASf,GAAaU,GAAcO,MAAM,cCvB3C8F,GAAU,SAAC,GAAsC,IAApCpL,EAAmC,EAAnCA,OAAQmB,EAA2B,EAA3BA,OACzBjD,EAAYE,IAAZF,QADoD,EAEzB0C,GAAsB,CACxDG,UAAW,SAACnB,GAAD,OACV1B,EAAQ,CACPmK,MAAM,QAAD,OAAUzI,EAAKuB,OAAS,SAAW,WAAnC,KACLyC,WAAY,eAN6C,mBAErDyH,EAFqD,KAExC9H,EAFwC,KAExCA,UAUpB,OACC,kBAACsH,GAAA,EAAD,CAASC,QAAO,UAAK3J,EAAS,QAAU,MAAxB,SAAsC4J,SAAS,UAC9D,kBAACvM,EAAD,CACCD,QAAQ,OACRiI,WAAY,kBAAC8E,GAAD,CAAclG,OAAQjE,IAClCyC,WAAW,SACXL,UAAWA,EACXyH,WAAYzH,EACZC,QAViB,kBAAM6H,EAAU,CAAErL,SAAQmB,QAASA,S,UClBlDkD,GAAa,kBAClB,yBACCC,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,iBACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,0YAMNC,GAAe,kBACpB,yBACCT,MAAM,6BACNC,QAAQ,YACRC,KAAK,gBAEL,uBAAGC,YAAU,WACZ,uBAAGA,YAAU,iBACZ,0BAAMC,MAAM,KAAKC,OAAO,KAAKE,QAAQ,MACrC,0BAAMC,EAAE,oYACR,4BAAQuC,GAAG,KAAKC,GAAG,MAAMC,EAAE,QAC3B,0BAAMzC,EAAE,6DACR,0BAAMA,EAAE,6DACR,0BAAMA,EAAE,kEAMG,mBAAGM,EAAH,EAAGA,OAAH,OACd,kBAAC,KAAD,CAAMC,MAAOD,EAASf,GAAaU,GAAcO,MAAM,mB,6WC5BjD,IAAMiG,GAAUhO,UAAOC,IAAV,MAQPgO,GAAQjO,UAAOC,IAAV,KAGG4E,IAAOqI,KAUfgB,GAAc,SAAC,GAAkC,IAAhCzL,EAA+B,EAA/BA,OAA+B,EAChCgD,oBAAS,GADuB,mBACrDJ,EADqD,KAC7C8I,EAD6C,KAEpDxN,EAAYE,IAAZF,QAFoD,EAGvB0C,GAAsB,CAC1DG,UAAW,kBACV7C,EAAQ,CAAEmK,MAAO,sBAAuBzE,WAAY,eALM,mBAGrD+H,EAHqD,KAGtCpI,EAHsC,KAGtCA,UAKhBqI,EAAmB,SAACC,GAAD,OAAmB,kBAC3CF,EAAY,CAAEE,QAAO7L,aAEtB,OACC,kBAAC,KAAD,CACC4C,OAAQA,EACRC,QAAS,kBAAM6I,GAAU,IACzBI,UAAU,YACVhB,QAAS,kBACR,kBAACS,GAAD,KACEQ,OAAOC,KAAKzC,IAAY7H,KAAI,SAACmK,GAAD,OAC5B,kBAACL,GAAD,CACClD,IAAKuD,EACL1F,MAAO,CAAE8F,gBAAiB1C,GAAWsC,IACrCrI,QAASoI,EAAiBC,UAK9BK,QAAS,gBAAGC,EAAH,EAAGA,IAAQC,EAAX,8BACR,kBAACvB,GAAA,EAAD,CAASC,QAAQ,eAAeC,SAAS,UACxC,kBAACvM,EAAD,iBACK4N,EADL,CAECC,SAAUF,EACV3I,QAAS,kBAAMkI,GAAW9I,IAC1B4D,WAAY,kBAAC8F,GAAD,MACZ1I,WAAYhB,EAAS,UAAY,SACjCW,UAAWA,EACXyH,WAAYzH,UCtDLgJ,GAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAW7K,EAAd,EAAcA,KAAd,OAC7B,kBAAC+I,GAAD,KACE8B,GACA,kBAAC,WAAD,KACC,kBAACtI,EAAA,EAAD,KACC,kBAAC,GAAD,CAAYlE,OAAQ2B,EAAKC,GAAI/C,QAAS8C,EAAK9C,YAE1C8C,EAAK9C,SACN,kBAACqF,EAAA,EAAD,KACC,kBAAC,GAAD,CAAalE,OAAQ2B,EAAKC,GAAIhD,SAAU+C,EAAK/C,WAC7C,kBAAC,GAAD,CAASoB,OAAQ2B,EAAKC,GAAIT,OAAQQ,EAAKR,SACvC,kBAAC,GAAD,CAAanB,OAAQ2B,EAAKC,S,mXCjBzB,IAAM6K,GAAYlP,UAAOmP,GAAV,MAMTC,GAAWpP,UAAOC,IAAV,MAeRoP,GAAW,SAAC,GAAgD,IAA9CjL,EAA6C,EAA7CA,KAAMkL,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,YACpCC,EAAaC,iBAAuB,MAE1CC,aAAaF,GAAY,WACpBD,GAAaA,OAGlB,IAPuE,EA6B3CI,cAtBJ,SAACC,GAAD,OACvB,kBAAC3C,GAAD,CACC4C,UAAU,YACVjH,MAAO,CAAE8F,gBAAiB1C,GAAW5H,EAAKkK,QAC1CQ,SAAUU,GAEV,yBAAKvJ,QAASqJ,GACZlL,EAAK0G,OAAS,kBAACoE,GAAD,KAAY9K,EAAK0G,OAC/B1G,EAAK0G,OAAS1G,EAAKmJ,SAAW,kBAAChJ,GAAD,MAC9BH,EAAKmJ,SACL,kBAAC6B,GAAD,KACEhL,EAAKmJ,QAAQuC,MAAM,MAAM3L,KAAI,SAAC4L,EAAMlF,GAAP,OAC7B,uBAAGE,IAAKF,GAAIkF,QAKhB,kBAACxL,GAAD,CAAgBE,KAAM,KACtB,kBAAC,GAAD,CAAgBwK,UAAWW,EAASxL,KAAMA,QAM5C,OA/BuE,qB,49BCfjE,IAAM4L,GAAoBhQ,UAAOC,IAAV,MAQjBgQ,GAAqBjQ,UAAOC,IAAV,MAQlBiQ,GAAkBlQ,kBAAOmQ,KAAPnQ,CAAH,MAiBfoQ,GAAiBpQ,UAAOqQ,MAAV,MAadC,GAAa,WACzB,IAAMC,EAAcd,iBAAuB,MACnC9O,EAAYE,IAAZF,QAFuB,EAGL8E,mBAAS,IAHJ,mBAGxBqF,EAHwB,KAGjB0F,EAHiB,OAID/K,mBAAS,IAJR,mBAIxB8H,EAJwB,KAIfkD,EAJe,OAKahL,oBAAS,GALtB,mBAKxBiL,EALwB,KAKRC,EALQ,OAMClL,qBAND,mBAMxBmL,EANwB,KAMdC,EANc,OAQCtN,YAAYnB,EAAY,CACvD0O,QAAS,SAACjO,GAAD,OAASgO,EAAYhO,EAAIE,UAClCS,UAAW,SAACnB,GACX0B,IAAWC,aAAqB,SAAS,SAACC,GAAD,aACxC,GAAC5B,IAAM6B,OAAP,oBAAkBD,GAAS,QAE5BtD,EAAQ,CAAEmK,MAAO,cAAezE,WAAY,YAC5C0K,OAf6B,mBAQxBC,EARwB,KAQdhL,EARc,KAQdA,UAmBX+K,EAAQ,WACbP,EAAS,IACTC,EAAW,IACXI,OAAYI,GACZN,GAAkB,IAOnB,OAJAjB,aAAaa,GAAa,WACpBzF,GAAUyC,GAASwD,OAIxB,kBAACf,GAAD,KACC,kBAACC,GAAD,KACC,yBAAKrH,MAAO,CAAEzB,MAAO,WAAayH,IAAK2B,GACtC,kBAACtD,GAAD,CAASrE,MAAO,CAAEsI,OAAQ,UACxBR,GACA,kBAAC,WAAD,KACC,kBAACN,GAAD,CACCe,YAAY,QACZ3G,MAAOM,EACPsG,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEC,OAAO9G,UAEpC,kBAACjG,GAAD,CAAgBE,KAAM,MAGxB,kBAACyL,GAAD,CACC1F,MAAO+C,EACP6D,SAAU,SAACC,GAAD,OAAOZ,EAAWY,EAAEC,OAAO9G,QACrC2G,YAAY,iBACZI,QAAS,kBAAMZ,GAAkB,IACjCd,UAAWa,EAAiB,YAAc,KAE1CA,GACA,kBAAC,WAAD,KACC,kBAACnM,GAAD,MACA,kBAAC4I,GAAD,KACC,kBAACxG,EAAA,EAAD,KACC,kBAAC7F,EAAD,CACCE,QAAQ,UACRqF,WAAW,UACXJ,QAjDO,WACV6E,GAAWyC,EAChByD,EAAO,CAAElG,QAAOyC,YAEhBsD,EAAY,4CA8CJ7K,UAAWA,EACXyH,WAAYzH,GALb,QASA,kBAAClF,EAAD,CAAWE,QAAQ,UAAUiF,QAAS8K,GAAtC,WAIAH,GAAY,kBAAC,GAAD,KAAWA,U,+ZCvHjC,IAAMY,GAAkBxR,UAAOC,IAAV,KAUA4E,IAAO4M,MAGtBC,GAAoB1R,UAAOC,IAAV,MACb,qBAAGkH,MAAqB,IAAM,QAAU,UAMrCwK,GAAW,SAAC,GAAsC,IAApCvN,EAAmC,EAAnCA,KAAMkB,EAA6B,EAA7BA,QAC1BsM,EAAuBnC,iBAAuB,MAC5CtI,EAAUuB,OAAVvB,MACAxG,EAAYE,IAAZF,QAHqD,EAI7B4C,YAAYf,EAAY,CACvDgB,UADuD,SAC7CnB,GACT0B,IAAWC,aACVI,EAAK/C,SAAW,CAAC,QAAS,CAAEA,UAAU,IAAU,SAChD,SAAC4C,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOE,KAAI,SAACC,GAAD,OAAWA,EAAKC,KAAOhC,EAAKgC,GAAKhC,EAAO+B,QAG/DzD,EAAQ,CAAEmK,MAAO,gBAAiBzE,WAAY,eAXa,mBAItDN,EAJsD,KAI5CC,EAJ4C,KAI5CA,UAJ4C,EAenCP,mBAASrB,EAAK0G,OAfqB,mBAetDA,EAfsD,KAe/C0F,EAf+C,OAgB/B/K,mBAASrB,EAAKmJ,SAhBiB,mBAgBtDA,EAhBsD,KAgB7CkD,EAhB6C,KA+B7D,OACC,kBAACe,GAAD,CAAiBvL,QAdE,SAACoL,GACpBA,EAAEQ,UADsE,IAEhEC,EAAiBT,EAAjBS,MAAOC,EAAUV,EAAVU,MACTC,EAAOJ,EAAqBK,QAASC,wBACnCC,EAA6BH,EAA7BG,IAAKC,EAAwBJ,EAAxBI,OAAQC,EAAgBL,EAAhBK,KAAMC,EAAUN,EAAVM,MACrBH,EAAMJ,GAASK,EAASL,GAASM,EAAOP,GAASQ,EAAQR,IAC1DhH,IAAU1G,EAAK0G,OAASyC,IAAYnJ,EAAKmJ,SAC5CxH,EAAO,CAAE+E,QAAOyC,UAAS9K,OAAQ2B,EAAKC,KAEvCiB,OAMA,kBAACoM,GAAD,CAAmB5C,SAAU8C,EAA6BzK,MAAOA,GAChE,kBAAC8F,GAAD,CACC4C,UAAU,YACVjH,MAAO,CAAE8F,gBAAiB1C,GAAW5H,EAAKkK,OAAQ4C,OAAQ,UAE1D,kBAACd,GAAD,CACCe,YAAY,QACZ3G,MAAOM,EACPsG,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEC,OAAO9G,UAEpC,kBAACjG,GAAD,MACCH,EAAK0G,OAAS1G,EAAKmJ,SAAW,kBAAChJ,GAAD,MAC9BH,EAAKmJ,SACL,kBAAC2C,GAAD,CACC1F,MAAO+C,EACP6D,SAAU,SAACC,GAAD,OAAOZ,EAAWY,EAAEC,OAAO9G,QACrC2G,YAAY,iBACZtB,UAAU,cAGX7J,GAAa,kBAAC,EAAD,MACd,kBAACzB,GAAD,MACA,kBAAC,GAAD,CAAgB0K,WAAS,EAAC7K,KAAMA,Q,yQCvFrC,IAAMmO,GAAa,CAClBC,QAAS,GACTC,QAAS,OACTC,QAAS,GACTC,oBAAqB,wCACrBC,aAAc,EACdzL,MAAO,sBAGK0L,GAAW7S,UAAOC,IAAV,MAKR6S,GAAY9S,UAAOC,IAAV,MAWT8S,GAAW,SAAC,GAAsC,IAApC9O,EAAmC,EAAnCA,MAAOL,EAA4B,EAA5BA,OAA4B,EACrB6B,qBADqB,mBACtDuN,EADsD,KACxCC,EADwC,KAEvDC,EAAUzD,iBAAuB,MAC/BtI,EAAUuB,cAAVvB,MA2BR,OAFAgM,qBAN8B,WAAO,IAAD,EACnCC,MAAMC,MAAK,UAAAH,EAAQjB,eAAR,eAAiBvH,WAAY,IAAI4I,SAAQ,SAACC,GAAD,OAlB3B,SAACC,GAC1B,IAAIC,EAAOP,EAAQjB,QACfyB,EAASC,SACZC,OAAOC,iBAAiBJ,GAAMK,iBAAiB,iBAE5CC,EAAYJ,SACfC,OAAOC,iBAAiBJ,GAAMK,iBAAiB,mBAG5CE,EAAWR,EAAKS,cAA8B,cAC9CC,EAAUC,KAAKC,MACjBJ,EAAS9B,wBAAwB9K,OAASsM,IAAWK,EAAYL,IAGnEF,EAAK5K,MAAMyL,WAAX,eAAgCH,GAK/BI,CAAkBf,QAIa,CAACpM,EAAOlD,IAGxC,kBAAC,WAAD,OACIL,GAAU,kBAACkP,GAAD,qBACb,yBAAKlK,MAAO2J,GAAY3D,IAAKsE,GAC3BjP,EACCK,QAAO,SAACF,GAAD,OAAUA,EAAKR,WAAaA,KACnCO,KAAI,SAACC,GAAD,OACJ,kBAACyO,GAAD,CAAU9H,IAAK3G,EAAKC,IACnB,kBAAC,GAAD,CAAUD,KAAMA,EAAMkL,SAAU,kBAAM2D,EAAgB7O,aAIvDR,GAAU,kBAACkP,GAAD,oBACZE,GACA,kBAAC,GAAD,CACC5O,KAAM4O,EACN1N,QAAS,kBAAM2N,OAAgBhC,Q,yQCrE7B,IAAMsD,GAAgBvU,UAAOC,IAAV,MAKbuU,GAAaxU,UAAOC,IAAV,MAMVwU,GAAW,WAAO,IAAD,E5Bc7BC,YAAS,SAAS,kBAAMnT,MAAe,CACtCoT,sBAAsB,I4BdfC,EADqB,EACrBA,MAAOvS,EADc,EACdA,KAAM2D,EADQ,EACRA,UAErB,OACC,kBAACuO,GAAD,KACC,kBAAC,GAAD,MACCvO,GAAa,kBAAC,EAAD,MACb3D,GACA,kBAAC,WAAD,KACC,kBAACkC,GAAD,MACClC,EAAKiC,QAAO,SAACF,GAAD,OAAUA,EAAKR,UAAQiR,OAAS,GAC5C,kBAAC,GAAD,CAAU5Q,MAAO5B,EAAMuB,QAAM,IAE9B,kBAAC,GAAD,CAAUK,MAAO5B,EAAMuB,QAAQ,IACd,IAAhBvB,EAAKwS,QAAgB,kBAACL,GAAD,4BAGvBI,GAAS,kBAAC,GAAD,KAAWA,EAAM7R,WC7BjB+R,GAAc,WAAO,IAAD,E7BmBhCJ,YACC,CAAC,QAAS,CAAErT,UAAU,KACtB,SAAC0T,EAAMtT,GAAP,OAAmBF,EAAYE,KAC/B,CAAEkT,sBAAsB,I6BrBjBC,EADwB,EACxBA,MAAOvS,EADiB,EACjBA,KAAM2D,EADW,EACXA,UAErB,OACC,kBAACuO,GAAD,KACC,kBAAChQ,GAAD,CAAgBE,KAAM,KACrBuB,GAAa,kBAAC,EAAD,MACb3D,GACA,kBAAC,WAAD,KACC,kBAAC,GAAD,CAAU4B,MAAO5B,IACA,IAAhBA,EAAKwS,QAAgB,kBAACL,GAAD,6BAGvBI,GAAS,kBAAC,GAAD,KAAWA,EAAM7R,W,wLCnBvB,IAAMiS,GAAahV,UAAOC,IAAV,M,4WCChB,IAAMgV,GAAWjV,UAAOC,IAAV,KAKK4E,IAAOqI,K,qNCN1B,IAAMgI,GAA0BlV,UAAOC,IAAV,MCY9BkV,GAAgB,iBAQTC,GAA2B,CACvC,CACCrN,MAAO,WACPsN,KAAM,OACNC,SAAU,SAACpP,GAAD,OACRA,EAEGiP,GAAcI,KAAKrP,QAEpB+K,EADA,oCAFA,yBAIJuE,cAAe,wCAEhB,CACCzN,MAAO,WACPsN,KAAM,WACNG,cAAe,gDACfF,SAAU,SAACpP,GAAD,OACRA,EAEEA,EAAI2O,OAAS,EACb,oDACA5D,EAHA,2BAOOwE,GAAY,WAAO,IjCI/BnS,EiCHQjD,EAAuBC,IAAvBD,mBADsB,EAEEoF,qBAFF,mBAEvBmL,EAFuB,KAEbC,EAFa,QjCI9BvN,EiCDgD,CAC/CwN,QAAS,SAACjO,GAAD,OAASgO,EAAYhO,EAAIE,UAClCS,UAAW,kBAAMnD,GAAmB,KjCCrCkD,YAAYZ,EAAW,CACtBa,UAAW,SAACnB,EAAMoB,GACjBM,IAAWC,aAAa,KAAM3B,IACvB,OAAPiB,QAAO,IAAPA,OAAA,EAAAA,EAASE,YAAaF,EAAQE,UAAUnB,EAAMoB,OiCTlB,mBAGvBiS,EAHuB,KAGd1P,EAHc,KAGdA,UAShB,OACC,kBAACiP,GAAD,KACC,kBAACC,GAAD,KACC,yBAAK9O,IAAKuP,KAAgB3M,IAAI,eAE/B,qCACA,kBAAC4M,GAAA,EAAD,CAAMC,SAVa,SAAC,GAAiC,IAA/BhP,EAA8B,EAA9BA,SAAUiP,EAAoB,EAApBA,SACjCJ,EAAM,CAAE7O,WAAUiP,gBAUf,gBAAGC,EAAH,EAAGA,UAAH,OACA,0CAAUA,EAAV,CAAqBC,YAAU,IAC7BZ,GAAYjR,KAAI,SAAC8R,GAAD,OAChB,kBAACC,GAAA,EAAD,CACCnL,IAAKkL,EAAMlO,MACXA,MAAOkO,EAAMlO,MACboO,YAAU,EACVvP,KAAMqP,EAAMlO,MAAMqO,cAClBd,SAAUW,EAAMX,SAChBe,aAAa,KAEZ,gBAAGC,EAAH,EAAGA,WAAY1B,EAAf,EAAeA,MAAf,OACA,kBAAC,WAAD,KACC,kBAAC,KAAD,iBACK0B,EADL,CAECC,aAAa,MACblB,KAAMY,EAAMZ,QAEZT,GAAS,kBAAC,KAAD,KAAeA,IACvBA,GAASqB,EAAMT,eAChB,kBAAC,KAAD,KAAgBS,EAAMT,sBAM3B,kBAACjR,GAAD,MACA,kBAACzD,EAAD,CACCuF,WAAW,UACXgP,KAAK,SACL3O,oBAAkB,EAClBV,UAAWA,GAJZ,UAQA,kBAACzB,GAAD,MACA,kBAACyQ,GAAD,KACC,uDACA,kBAAC,IAAD,CAAMwB,GAAG,WAAT,YAED,kBAACjS,GAAD,MACCqM,GAAY,kBAAC,GAAD,KAAWA,SC5FxB6F,GAAa,sHAENC,GAAyB,CACrC,CACC3O,MAAO,OACPsN,KAAM,OACNC,SAAU,SAACpP,GAAD,OAAWA,OAA4B+K,EAAtB,sBAE5B,CACClJ,MAAO,QACPsN,KAAM,QACNC,SAAU,SAACpP,GAAD,OACRA,EAEGuQ,GAAWlB,KAAKrP,QAEjB+K,EADA,8BAFA,wBAXgC,mBAgBlCmE,KAGSuB,GAAa,WAAO,IlCyBhCrT,EkCxBQjD,EAAuBC,IAAvBD,mBADuB,EAECoF,qBAFD,mBAExBmL,EAFwB,KAEdC,EAFc,QlCyB/BvN,EkCtBkD,CACjDwN,QAAS,SAACjO,GAAD,OAASgO,EAAYhO,EAAIE,UAClCS,UAAW,kBAAMnD,GAAmB,KlCsBrCkD,YAAYL,EAAY,CACvBM,UAAW,SAACnB,EAAMoB,GACjBM,IAAWC,aAAa,KAAM3B,IACvB,OAAPiB,QAAO,IAAPA,OAAA,EAAAA,EAASE,YAAaF,EAAQE,UAAUnB,EAAMoB,OkC9BjB,mBAGxBmT,EAHwB,KAGd5Q,EAHc,KAGdA,UASjB,OACC,kBAACiP,GAAD,KACC,kBAACC,GAAD,KACC,yBAAK9O,IAAKuP,KAAgB3M,IAAI,eAE/B,uCACA,kBAAC4M,GAAA,EAAD,CAAMC,SAVa,SAAC,GAA8C,IAA5ChP,EAA2C,EAA3CA,SAAUiP,EAAiC,EAAjCA,SAAUe,EAAuB,EAAvBA,MAAOjQ,EAAgB,EAAhBA,KAClDgQ,EAAO,CAAE/P,WAAUiP,WAAUe,QAAOjQ,YAUjC,gBAAGmP,EAAH,EAAGA,UAAH,OACA,0CAAUA,EAAV,CAAqBC,YAAU,IAC7BU,GAAavS,KAAI,SAAC8R,GAAD,OACjB,kBAACC,GAAA,EAAD,CACCnL,IAAKkL,EAAMlO,MACXA,MAAOkO,EAAMlO,MACboO,YAAU,EACVvP,KAAMqP,EAAMlO,MAAMqO,cAClBd,SAAUW,EAAMX,SAChBe,aAAa,KAEZ,gBAAGC,EAAH,EAAGA,WAAY1B,EAAf,EAAeA,MAAf,OACA,kBAAC,WAAD,KACC,kBAAC,KAAD,iBACK0B,EADL,CAECC,aAAa,MACblB,KAAMY,EAAMZ,QAEZT,GAAS,kBAAC,KAAD,KAAeA,IACvBA,GAASqB,EAAMT,eAChB,kBAAC,KAAD,KAAgBS,EAAMT,sBAM3B,kBAACjR,GAAD,MACA,kBAACzD,EAAD,CACCuF,WAAW,UACXgP,KAAK,SACL3O,oBAAkB,EAClBV,UAAWA,GAJZ,UAQA,kBAACzB,GAAD,MACA,kBAACyQ,GAAD,KACC,yDACA,kBAAC,IAAD,CAAMwB,GAAG,UAAT,UAEA5F,GAAY,kBAAC,GAAD,KAAWA,SCvFjBkG,GAAY,WAAO,IAAD,EnCY9BpC,YACC,CAAC,QAAS,CAAEpT,SAAS,KACrB,SAACyT,EAAMtT,GAAP,OAAmBF,EAAYE,KAC/B,CAAEkT,sBAAsB,ImCdjBC,EADsB,EACtBA,MAAOvS,EADe,EACfA,KAAM2D,EADS,EACTA,UAErB,OACC,kBAACuO,GAAD,KACC,kBAAChQ,GAAD,CAAgBE,KAAM,KACtB,kBAAC+P,GAAD,qDACA,kBAACjQ,GAAD,CAAgBE,KAAM,KACrBuB,GAAa,kBAAC,EAAD,MACb3D,GACA,kBAAC,WAAD,KACC,kBAAC,GAAD,CAAU4B,MAAO5B,IACA,IAAhBA,EAAKwS,QAAgB,kBAACL,GAAD,2BAGvBI,GAAS,kBAAC,GAAD,KAAWA,EAAM7R,WCdjBgU,GAAY,kBACxB,kBAAC,IAAD,KACC,kBAAC,GAAD,CAAaC,KAAK,SAASC,UAAWxB,GAAWyB,OAAK,IACtD,kBAAC,GAAD,CAAaF,KAAK,UAAUC,UAAWN,GAAYO,OAAK,IACxD,kBAAC,GAAD,CAAcF,KAAK,WAAWC,UAAWnC,GAAaoC,OAAK,IAC3D,kBAAC,GAAD,CAAcF,KAAK,SAASC,UAAWH,GAAWI,OAAK,IACvD,kBAAC,GAAD,CAAcF,KAAK,IAAIC,UAAWxC,GAAUyC,OAAK,MAItCC,GAAe,SAAC3S,GAE5B,OAD4BlE,IAApBF,gBACoB,kBAAC,IAAUoE,GAC3B,kBAAC,IAAD,CAAUgS,GAAG,YAGbY,GAAc,SAAC5S,GAE3B,OAD4BlE,IAApBF,gBAEI,kBAAC,IAAD,CAAUoW,GAAG,MADI,kBAAC,IAAUhS,ICf5B6S,GAAM,WAAO,IrC0BC/T,EqC1BF,EACsBmC,qBADtB,mBACjBrF,EADiB,KACAC,EADA,KAOxB,OrCmB0BiD,EqCxBf,CACVE,UAAW,kBAAMnD,GAAmB,IACpCyQ,QAAS,kBAAMzQ,GAAmB,KrCuBnCqU,YAAS,KAAMvR,GAAP,aACPmU,OAAO,EACP3C,sBAAsB,GACnBrR,IqCvB2B,qBAApBlD,EAET,kBAAC,IAAD,KACC,kBAACmL,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC/K,EAAD,CAAcgK,MAAO,CAAEpK,kBAAiBC,uBACtCD,EAAkB,kBAAC,GAAD,MAAa,kBAAC,GAAD,MAChC,kBAAC,GAAD,UAMQ,kBAAC,EAAD,OCpBKmX,QACW,cAA7B3D,OAAO4D,SAASC,UAEe,UAA7B7D,OAAO4D,SAASC,UAEhB7D,OAAO4D,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDsI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3R,MAAK,SAAA4R,GACJA,EAAaC,gBAEdvV,OAAM,SAAAgS,GACLpO,QAAQoO,MAAMA,EAAM7R,a,mBEjJ5BlD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.b3c93355.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/absbg.ff17e284.png\";","import Spinner from \"@atlaskit/spinner\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst AppLoader = styled.div`\n\twidth: inherit;\n\tdisplay: flex;\n\tjustify-content: center;\n\tpadding: 20px 0px;\n`;\n\nexport default () => (\n\t<AppLoader>\n\t\t<Spinner />\n\t</AppLoader>\n);\n","import { createContext, useContext } from \"react\";\nimport { FlagData } from \"./types\";\n\ninterface IAuthContext {\n\tisAuthenticated: boolean;\n\tsetIsAuthenticated: (val: boolean) => void;\n}\n\nexport const AuthContext = createContext<IAuthContext>({\n\tisAuthenticated: false,\n\tsetIsAuthenticated: () => {}\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = AuthContext.Provider;\n\ninterface IFlagContext {\n\taddFlag: (options: FlagData) => void;\n}\n\nexport const FlagContext = createContext<IFlagContext>({\n\taddFlag: (_options) => {}\n});\n\nexport const useFlag = () => useContext(FlagContext);\n","import { PrimaryButton } from \"@atlaskit/atlassian-navigation\";\nimport Button from \"@atlaskit/button\";\nimport styled from \"styled-components\";\n\nexport const AppButton = styled(Button)`\n\ttext-transform: uppercase;\n\tdisplay: flex;\n\tjustify-content: center;\n\tfont-weight: bold !important;\n\theight: 40px ${({ spacing }) => spacing !== \"compact\" && \"!important\"};\n`;\n\nexport const AppIconButton = styled(AppButton)`\n\theight: 30px !important;\n\twidth: 30px !important;\n\tborder-radius: 50% !important;\n\n\t& svg {\n\t\twidth: 20px;\n\t}\n`;\n\nexport const NavButton = styled(PrimaryButton)`\n\ttext-transform: uppercase;\n\tdisplay: flex;\n\tjustify-content: center;\n\tfont-weight: bold !important;\n\tmargin-right: 10px !important;\n\n\t& svg {\n\t\twidth: 20px;\n\t}\n`;\n","import client from \"superagent\";\nimport {\n\tCreateNoteInput,\n\tGetNotesFilter,\n\tNote,\n\tUpdateNoteInput\n} from \"../utils/types\";\n\nconst defaultFilters = { archived: false, deleted: false };\n\nexport const getAllNotes = async (filters: GetNotesFilter = defaultFilters) => {\n\tconst token = localStorage.getItem(\"authToken\");\n\tconst response = await client\n\t\t.get(`${process.env.REACT_APP_API_URL}/notes`)\n\t\t.query(filters)\n\t\t.set(\"Authorization\" as any, token ? `Bearer ${token}` : \"\");\n\treturn response.body as Note[];\n};\n\nexport const createNote = async (data: CreateNoteInput) => {\n\tconst token = localStorage.getItem(\"authToken\");\n\tconst response = await client\n\t\t.post(`${process.env.REACT_APP_API_URL}/notes/create`)\n\t\t.set(\"Authorization\" as any, token ? `Bearer ${token}` : \"\")\n\t\t.send(data);\n\n\treturn response.body as Note;\n};\n\nexport const updateNote = async ({ noteId, ...data }: UpdateNoteInput) => {\n\tconst token = localStorage.getItem(\"authToken\");\n\tconst response = await client\n\t\t.put(`${process.env.REACT_APP_API_URL}/notes/update/${noteId}`)\n\t\t.set(\"Authorization\" as any, token ? `Bearer ${token}` : \"\")\n\t\t.send(data);\n\n\treturn response.body as Note;\n};\n","import client from \"superagent\";\nimport { CreateUserInput, User, UserLoginInput } from \"../utils/types\";\n\nexport const userLogin = async (data: UserLoginInput) => {\n\tconst response = await client\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/login`)\n\t\t.send(data)\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err.response.body.message);\n\t\t});\n\tlocalStorage.setItem(\"authToken\", response.body.token);\n\n\treturn response.body.user as User;\n};\n\nexport const userSignup = async (data: CreateUserInput) => {\n\tconst response = await client\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/signup`)\n\t\t.send(data)\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err.response.body.message);\n\t\t});\n\tlocalStorage.setItem(\"authToken\", response.body.token);\n\n\treturn response.body.user;\n};\n\nexport const me = async () => {\n\tconst token = localStorage.getItem(\"authToken\");\n\tconst response = await client\n\t\t.get(`${process.env.REACT_APP_API_URL}/user/me`)\n\t\t.set(\"Authorization\" as any, token ? `Bearer ${token}` : \"\")\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err.response.body.message);\n\t\t});\n\n\treturn response.body.me as User;\n};\n\nexport const updateAvatar = async (data: { avatar: string }) => {\n\tconst token = localStorage.getItem(\"authToken\");\n\tconst response = await client\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/update`)\n\t\t.set(\"Authorization\" as any, token ? `Bearer ${token}` : \"\")\n\t\t.send(data)\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err.response.body.message);\n\t\t});\n\n\treturn response.body as User;\n};\n","import {\n\tMutationOptions,\n\tqueryCache,\n\tQueryKeyOrPredicateFn,\n\tQueryOptions,\n\tuseMutation,\n\tuseQuery\n} from \"react-query\";\nimport { createNote, getAllNotes, updateNote } from \"../api/notes\";\nimport { me, updateAvatar, userLogin, userSignup } from \"../api/user\";\nimport {\n\tCreateNoteInput,\n\tCreateUserInput,\n\tNote,\n\tUpdateNoteInput,\n\tUser,\n\tUserLoginInput\n} from \"./types\";\n\nexport const useDeletedNotesQuery = () =>\n\tuseQuery(\n\t\t[\"notes\", { deleted: true }],\n\t\t(_key, filters) => getAllNotes(filters),\n\t\t{ refetchOnWindowFocus: false }\n\t);\n\nexport const useArchivedNotesQuery = () =>\n\tuseQuery(\n\t\t[\"notes\", { archived: true }],\n\t\t(_key, filters) => getAllNotes(filters),\n\t\t{ refetchOnWindowFocus: false }\n\t);\n\nexport const useAllNotesQuery = () =>\n\tuseQuery(\"notes\", () => getAllNotes(), {\n\t\trefetchOnWindowFocus: false\n\t});\n\nexport const useMeQuery = (options?: QueryOptions<User, Error>) =>\n\tuseQuery(\"me\", me, {\n\t\tretry: false,\n\t\trefetchOnWindowFocus: false,\n\t\t...options\n\t});\n\nexport const useUpdateAvatarMutation = () =>\n\tuseMutation(updateAvatar, {\n\t\tonSuccess: (data) => queryCache.setQueryData(\"me\", data)\n\t});\n\nexport const useLoginMutation = (\n\toptions?: MutationOptions<User, UserLoginInput, Error, unknown>\n) =>\n\tuseMutation(userLogin, {\n\t\tonSuccess: (data, variables) => {\n\t\t\tqueryCache.setQueryData(\"me\", data);\n\t\t\toptions?.onSuccess && options.onSuccess(data, variables);\n\t\t}\n\t});\n\nexport const useSignupMutation = (\n\toptions?: MutationOptions<User, CreateUserInput, Error, unknown>\n) =>\n\tuseMutation(userSignup, {\n\t\tonSuccess: (data, variables) => {\n\t\t\tqueryCache.setQueryData(\"me\", data);\n\t\t\toptions?.onSuccess && options.onSuccess(data, variables);\n\t\t}\n\t});\n\nexport const useCreateNoteMutation = (\n\toptions?: MutationOptions<Note, CreateNoteInput, Error, unknown>\n) =>\n\tuseMutation(createNote, {\n\t\tonSuccess: (data, variables) => {\n\t\t\taddNoteToNoteList(\"notes\", data);\n\t\t\toptions?.onSuccess && options.onSuccess(data, variables);\n\t\t}\n\t});\n\nexport const useUpdateNoteMutation = (\n\toptions?: MutationOptions<Note, UpdateNoteInput, Error, unknown>\n) =>\n\tuseMutation(updateNote, {\n\t\tonSuccess(data, variables) {\n\t\t\tswitch (true) {\n\t\t\t\tcase typeof variables.deleted !== \"undefined\":\n\t\t\t\t\tif (variables.deleted) {\n\t\t\t\t\t\taddNoteToNoteList([\"notes\", { deleted: true }], data);\n\t\t\t\t\t\tremoveNoteFromNoteList(\"notes\", data);\n\t\t\t\t\t\tremoveNoteFromNoteList([\"notes\", { archived: true }], data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNoteToNoteList(\"notes\", data);\n\t\t\t\t\t\tremoveNoteFromNoteList([\"notes\", { deleted: true }], data);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase typeof variables.archived !== \"undefined\":\n\t\t\t\t\tif (variables.archived) {\n\t\t\t\t\t\taddNoteToNoteList([\"notes\", { archived: true }], data);\n\t\t\t\t\t\tremoveNoteFromNoteList(\"notes\", data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNoteToNoteList(\"notes\", data);\n\t\t\t\t\t\tremoveNoteFromNoteList([\"notes\", { archived: true }], data);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase typeof variables.pinned !== \"undefined\":\n\t\t\t\t\tif (variables.pinned) {\n\t\t\t\t\t\tremoveNoteFromNoteList(\"notes\", data);\n\t\t\t\t\t\taddNoteToNoteList(\"notes\", data);\n\t\t\t\t\t\tremoveNoteFromNoteList([\"notes\", { archived: true }], data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdateNoteInNoteList(\"notes\", data);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tupdateNoteInNoteList(\"notes\", data);\n\t\t\t\t\tupdateNoteInNoteList([\"notes\", { archived: true }], data);\n\t\t\t}\n\t\t\toptions?.onSuccess && options.onSuccess(data, variables);\n\t\t}\n\t});\n\nconst addNoteToNoteList = (listKey: QueryKeyOrPredicateFn, data: Note) => {\n\tqueryCache.setQueryData<Note[]>(listKey, (notes) =>\n\t\t[data].concat(...(notes || []))\n\t);\n};\n\nconst updateNoteInNoteList = (listKey: QueryKeyOrPredicateFn, data: Note) => {\n\tqueryCache.setQueryData<Note[]>(listKey, (notes) =>\n\t\tnotes?.map((note) => (note.id !== data.id ? note : data))\n\t);\n};\n\nconst removeNoteFromNoteList = (listKey: QueryKeyOrPredicateFn, data: Note) => {\n\tqueryCache.setQueryData<Note[]>(listKey, (notes) =>\n\t\tnotes?.filter((note) => note.id !== data.id)\n\t);\n};\n","import styled from \"styled-components\";\n\nexport const VerticalSpacer = styled.div<{ size?: number }>`\n\twidth: 100%;\n\tmargin: ${(props) => props.size || 15}px 0px;\n`;\n","import Avatar from \"@atlaskit/avatar\";\nimport { ButtonGroup } from \"@atlaskit/button\";\nimport Drawer from \"@atlaskit/drawer\";\nimport { colors } from \"@atlaskit/theme\";\nimport React, { Fragment, useState } from \"react\";\nimport { queryCache } from \"react-query\";\nimport styled from \"styled-components\";\nimport client from \"superagent\";\nimport { useUpdateAvatarMutation } from \"../utils/hooks\";\nimport { User } from \"../utils/types\";\nimport { AppButton } from \"./AppButton\";\nimport { VerticalSpacer } from \"./VerticalSpacer\";\n\nexport const DrawerWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 100%;\n\twidth: calc(100% - 64px);\n`;\n\nexport const DrawerHeader = styled.div`\n\theight: 40px;\n\tdisplay: flex;\n\twidth: 100%;\n\talign-items: center;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tfont-family: \"Montserrat\";\n`;\n\nexport const DrawerHelperText = styled.div`\n\ttext-transform: uppercase;\n\tfont-size: 12px;\n\tcolor: ${colors.N200};\n`;\n\nexport const DrawerPrimaryText = styled.div`\n\tfont-size: 18px;\n`;\n\nexport const DrawerSecondaryText = styled.div`\n\tcolor: ${colors.B500};\n\tfont-weight: bold;\n`;\n\nexport const AvatarWrapper = styled.div`\n\ttext-align: center;\n\tfont-family: \"Montserrat\";\n\tpadding-bottom: 10vh;\n`;\n\nexport const StyledAvatar = styled.div`\n\tcursor: pointer;\n`;\n\ninterface AppDrawerProps {\n\tisOpen: boolean;\n\tonClose: () => void;\n}\n\nexport const AppDrawer = ({ isOpen, onClose }: AppDrawerProps) => {\n\treturn (\n\t\t<Drawer isOpen={isOpen} onClose={onClose}>\n\t\t\t<DrawerWrapper>\n\t\t\t\t<DrawerHeader>Profile</DrawerHeader>\n\t\t\t\t<ProfileDrawer />\n\t\t\t\t<div></div>\n\t\t\t</DrawerWrapper>\n\t\t</Drawer>\n\t);\n};\n\nexport const ProfileDrawer = () => {\n\tconst user = queryCache.getQueryData<User | undefined>(\"me\");\n\tconst [randomAvatar, setRandomAvatar] = useState(user?.avatar);\n\tconst [isAvatarControlsOpen, setIsAvatarControlsOpen] = useState(false);\n\tconst [update, { isLoading }] = useUpdateAvatarMutation();\n\n\tconst toggleAvatarControls = () => setIsAvatarControlsOpen((val) => !val);\n\n\tconst getRandomAvatar = () =>\n\t\tclient\n\t\t\t.get(`${process.env.REACT_APP_API_URL}/avatar/random`)\n\t\t\t.then(({ body: { url } }) => setRandomAvatar(url))\n\t\t\t.catch(console.log);\n\n\tconst changeAvatar = () => {\n\t\tupdate({ avatar: randomAvatar! });\n\t\tsetIsAvatarControlsOpen(false);\n\t};\n\n\treturn (\n\t\t<AvatarWrapper>\n\t\t\t<StyledAvatar onClick={toggleAvatarControls}>\n\t\t\t\t<Avatar src={randomAvatar} size=\"xxlarge\" />\n\t\t\t</StyledAvatar>\n\t\t\t<VerticalSpacer size={10} />\n\t\t\t{isAvatarControlsOpen ? (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<AppButton\n\t\t\t\t\t\tappearance=\"default\"\n\t\t\t\t\t\tspacing=\"compact\"\n\t\t\t\t\t\tonClick={getRandomAvatar}\n\t\t\t\t\t\tshouldFitContainer\n\t\t\t\t\t>\n\t\t\t\t\t\tRandom\n\t\t\t\t\t</AppButton>\n\t\t\t\t\t<VerticalSpacer size={10} />\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t<AppButton\n\t\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\t\tspacing=\"compact\"\n\t\t\t\t\t\t\tonClick={changeAvatar}\n\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</AppButton>\n\t\t\t\t\t\t<AppButton\n\t\t\t\t\t\t\tappearance=\"danger\"\n\t\t\t\t\t\t\tspacing=\"compact\"\n\t\t\t\t\t\t\tonClick={() => setRandomAvatar(user?.avatar)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDiscard\n\t\t\t\t\t\t</AppButton>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</Fragment>\n\t\t\t) : (\n\t\t\t\t<DrawerHelperText>Click on avatar to modify</DrawerHelperText>\n\t\t\t)}\n\t\t\t<VerticalSpacer size={20} />\n\t\t\t<DrawerPrimaryText>{user?.name}</DrawerPrimaryText>\n\t\t\t<VerticalSpacer size={5} />\n\t\t\t<DrawerSecondaryText>@{user?.username}</DrawerSecondaryText>\n\t\t</AvatarWrapper>\n\t);\n};\n","import Icon from \"@atlaskit/icon\";\nimport React from \"react\";\nimport { AppIconProps } from \"../../utils/types\";\n\nconst FilledIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"archive\">\n\t\t\t\t<rect width=\"24\" height=\"24\" transform=\"rotate(90 12 12)\" opacity=\"0\" />\n\t\t\t\t<path d=\"M18 3H6a3 3 0 0 0-2 5.22V18a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8.22A3 3 0 0 0 18 3zm-3 10.13a.87.87 0 0 1-.87.87H9.87a.87.87 0 0 1-.87-.87v-.26a.87.87 0 0 1 .87-.87h4.26a.87.87 0 0 1 .87.87zM18 7H6a1 1 0 0 1 0-2h12a1 1 0 0 1 0 2z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"archive\">\n\t\t\t\t<rect width=\"24\" height=\"24\" transform=\"rotate(90 12 12)\" opacity=\"0\" />\n\t\t\t\t<path d=\"M21 6a3 3 0 0 0-3-3H6a3 3 0 0 0-2 5.22V18a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8.22A3 3 0 0 0 21 6zM6 5h12a1 1 0 0 1 0 2H6a1 1 0 0 1 0-2zm12 13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V9h12z\" />\n\t\t\t\t<rect x=\"9\" y=\"12\" width=\"6\" height=\"2\" rx=\".87\" ry=\".87\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default ({ filled }: AppIconProps) => (\n\t<Icon glyph={!!filled ? FilledIcon : OutlinedIcon} label=\"archive\" />\n);\n","import Icon from \"@atlaskit/icon\";\nimport React from \"react\";\nimport { AppIconProps } from \"../../utils/types\";\n\nconst FilledIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"home\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<rect x=\"10\" y=\"14\" width=\"4\" height=\"7\" />\n\t\t\t\t<path d=\"M20.42 10.18L12.71 2.3a1 1 0 0 0-1.42 0l-7.71 7.89A2 2 0 0 0 3 11.62V20a2 2 0 0 0 1.89 2H8v-9a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v9h3.11A2 2 0 0 0 21 20v-8.38a2.07 2.07 0 0 0-.58-1.44z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"home\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M20.42 10.18L12.71 2.3a1 1 0 0 0-1.42 0l-7.71 7.89A2 2 0 0 0 3 11.62V20a2 2 0 0 0 1.89 2h14.22A2 2 0 0 0 21 20v-8.38a2.07 2.07 0 0 0-.58-1.44zM10 20v-6h4v6zm9 0h-3v-7a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v7H5v-8.42l7-7.15 7 7.19z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default ({ filled }: AppIconProps) => (\n\t<Icon glyph={filled ? FilledIcon : OutlinedIcon} label=\"home\" />\n);\n","import Icon from \"@atlaskit/icon\";\nimport React from \"react\";\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"log-out\">\n\t\t\t\t<rect width=\"24\" height=\"24\" transform=\"rotate(90 12 12)\" opacity=\"0\" />\n\t\t\t\t<path d=\"M7 6a1 1 0 0 0 0-2H5a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 0-2H6V6z\" />\n\t\t\t\t<path d=\"M20.82 11.42l-2.82-4a1 1 0 0 0-1.39-.24 1 1 0 0 0-.24 1.4L18.09 11H10a1 1 0 0 0 0 2h8l-1.8 2.4a1 1 0 0 0 .2 1.4 1 1 0 0 0 .6.2 1 1 0 0 0 .8-.4l3-4a1 1 0 0 0 .02-1.18z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default () => <Icon glyph={OutlinedIcon} label=\"home\" />;\n","import Icon from \"@atlaskit/icon\";\nimport React from \"react\";\nimport { AppIconProps } from \"../../utils/types\";\n\nconst FilledIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"trash\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 4.33c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"trash\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 4.33c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM18 19a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V8h12z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default ({ filled }: AppIconProps) => (\n\t<Icon glyph={filled ? FilledIcon : OutlinedIcon} label=\"home\" />\n);\n","import { Profile } from \"@atlaskit/atlassian-navigation\";\nimport { colors } from \"@atlaskit/theme\";\nimport React, { useState } from \"react\";\nimport { queryCache } from \"react-query\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useWindowSize } from \"react-use\";\nimport styled from \"styled-components\";\nimport LogoIcon from \"../assets/icon.svg\";\nimport WordMark from \"../assets/wordmark.svg\";\nimport { useAuth } from \"../utils/context\";\nimport { User } from \"../utils/types\";\nimport { NavButton } from \"./AppButton\";\nimport { AppDrawer } from \"./AppDrawer\";\nimport ArchiveIcon from \"./icons/ArchiveIcon\";\nimport HomeIcon from \"./icons/HomeIcon\";\nimport LogoutIcon from \"./icons/LogoutIcon\";\nimport TrashIcon from \"./icons/TrashIcon\";\n\nconst NavContainer = styled.div`\n\tposition: fixed;\n\twidth: 100vw;\n\ttop: 0;\n\tz-index: 100;\n\theight: 70px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbackground-color: ${colors.N0};\n`;\n\nconst NavItems = styled.div`\n\tpadding: 5px 20px;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nexport const AppNav = () => {\n\tconst history = useHistory();\n\tconst { pathname } = useLocation();\n\tconst [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\tconst { setIsAuthenticated, isAuthenticated } = useAuth();\n\tconst { width } = useWindowSize();\n\tlet data: User | undefined = queryCache.getQueryData(\"me\");\n\n\tconst handleLogout = () => {\n\t\tlocalStorage.removeItem(\"authToken\");\n\t\tsetIsAuthenticated(!isAuthenticated);\n\t};\n\n\treturn (\n\t\t<NavContainer>\n\t\t\t<NavItems>\n\t\t\t\t<a href=\"https://hacknotes.yashgupta.dev\" style={{ marginRight: 25 }}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={width > 1280 ? WordMark : LogoIcon}\n\t\t\t\t\t\talt=\"Hacknotes\"\n\t\t\t\t\t\theight=\"30px\"\n\t\t\t\t\t/>\n\t\t\t\t</a>\n\t\t\t\t<NavButton\n\t\t\t\t\ticonBefore={<HomeIcon filled={pathname === \"/\"} />}\n\t\t\t\t\tisSelected={pathname === \"/\"}\n\t\t\t\t\tonClick={() => history.push(\"/\")}\n\t\t\t\t>\n\t\t\t\t\tHome\n\t\t\t\t</NavButton>\n\t\t\t\t<NavButton\n\t\t\t\t\ticonBefore={<ArchiveIcon filled={pathname === \"/archive\"} />}\n\t\t\t\t\tonClick={() => history.push(\"/archive\")}\n\t\t\t\t\tisSelected={pathname === \"/archive\"}\n\t\t\t\t>\n\t\t\t\t\tArchive\n\t\t\t\t</NavButton>\n\t\t\t\t<NavButton\n\t\t\t\t\ticonBefore={<TrashIcon filled={pathname === \"/trash\"} />}\n\t\t\t\t\tisSelected={pathname === \"/trash\"}\n\t\t\t\t\tonClick={() => history.push(\"/trash\")}\n\t\t\t\t>\n\t\t\t\t\tTrash\n\t\t\t\t</NavButton>\n\t\t\t</NavItems>\n\t\t\t<NavItems>\n\t\t\t\t<Profile\n\t\t\t\t\tonClick={() => setIsDrawerOpen(true)}\n\t\t\t\t\ttooltip=\"Profile\"\n\t\t\t\t\ticon={<img src={data?.avatar} alt=\"avatar\" width={30} height={30} />}\n\t\t\t\t/>\n\t\t\t\t<NavButton\n\t\t\t\t\ttooltip=\"Logout\"\n\t\t\t\t\tonClick={handleLogout}\n\t\t\t\t\ticonBefore={<LogoutIcon />}\n\t\t\t\t\tstyle={{ width: 32, borderRadius: \"50%\", margin: 5 }}\n\t\t\t\t/>\n\t\t\t</NavItems>\n\t\t\t<AppDrawer isOpen={isDrawerOpen} onClose={() => setIsDrawerOpen(false)} />\n\t\t</NavContainer>\n\t);\n};\n","import Icon from \"@atlaskit/icon\";\nimport React from \"react\";\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"alert-circle\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z\" />\n\t\t\t\t<circle cx=\"12\" cy=\"16\" r=\"1\" />\n\t\t\t\t<path d=\"M12 7a1 1 0 0 0-1 1v5a1 1 0 0 0 2 0V8a1 1 0 0 0-1-1z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default () => <Icon glyph={OutlinedIcon} label=\"error\" />;\n","import Icon from \"@atlaskit/icon\";\nimport { colors } from \"@atlaskit/theme\";\nimport React from \"react\";\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"checkmark-circle\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M9.71 11.29a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .72-.34l7-8a1 1 0 0 0-1.5-1.32L12 13.54z\" />\n\t\t\t\t<path d=\"M21 11a1 1 0 0 0-1 1 8 8 0 0 1-8 8A8 8 0 0 1 6.33 6.36 7.93 7.93 0 0 1 12 4a8.79 8.79 0 0 1 1.9.22 1 1 0 1 0 .47-1.94A10.54 10.54 0 0 0 12 2a10 10 0 0 0-7 17.09A9.93 9.93 0 0 0 12 22a10 10 0 0 0 10-10 1 1 0 0 0-1-1z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default () => (\n\t<Icon glyph={OutlinedIcon} label=\"success\" primaryColor={colors.G500} />\n);\n","import { AutoDismissFlag, FlagGroup } from \"@atlaskit/flag\";\nimport React, { ReactNode, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FlagContext } from \"../utils/context\";\nimport { FlagData } from \"../utils/types\";\nimport ErrorIcon from \"./icons/ErrorIcon\";\nimport SuccessIcon from \"./icons/SuccessIcon\";\n\nconst IconWrapper = styled.span`\n\twidth: 24px;\n\theight: 24px;\n\n\tspan {\n\t\twidth: 100%;\n\t\tsvg {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n`;\n\nexport const FlagProvider = (props: { children: ReactNode }) => {\n\tconst [flags, setFlags] = useState<FlagData[]>([]);\n\n\tconst dismissFlag = () => setFlags(flags.slice(1));\n\tconst addFlag = (flag: FlagData) => setFlags([flag, ...flags]);\n\n\treturn (\n\t\t<FlagContext.Provider value={{ addFlag }}>\n\t\t\t{props.children}\n\t\t\t<FlagGroup onDismissed={dismissFlag}>\n\t\t\t\t{flags.map(({ appearance, title }, i) => (\n\t\t\t\t\t<AutoDismissFlag\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tid={i + \"flag\"}\n\t\t\t\t\t\tkey={i + \"flag\"}\n\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t<IconWrapper>\n\t\t\t\t\t\t\t\t{appearance === \"success\" ? <SuccessIcon /> : <ErrorIcon />}\n\t\t\t\t\t\t\t</IconWrapper>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</FlagGroup>\n\t\t</FlagContext.Provider>\n\t);\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport BgImage from \"../assets/absbg.png\";\nimport LogoIcon from \"../assets/icon.svg\";\n\nexport const MainGraphicWrapper = styled.div`\n\theight: 100vh;\n\tflex: 1;\n\tbackground-image: url(${BgImage});\n\tbackground-size: cover;\n\tbackground-repeat: no-repeat no-repeat;\n\tbackground-position: center center;\n`;\n\nexport const MainGraphicIcon = styled.img`\n\tposition: absolute;\n\ttop: 20px;\n\tleft: 20px;\n\tmax-width: 60px;\n`;\n\nexport const MainGraphic = () => (\n\t<MainGraphicWrapper>\n\t\t<MainGraphicIcon src={LogoIcon} />\n\t</MainGraphicWrapper>\n);\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n\twidth: 100vw;\n\tmin-height: 100vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-family: \"Montserrat\";\n`;\n","import ErrorIcon from \"@atlaskit/icon/glyph/editor/warning\";\nimport { colors } from \"@atlaskit/theme\";\nimport React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { VerticalSpacer } from \"./VerticalSpacer\";\n\nexport const AppErrorContainer = styled.div`\n\tcolor: ${colors.R400};\n\tfont-weight: bold;\n\tcontent: \"hello\";\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nexport const AppError = (props: {\n\tchildren: ReactNode;\n\twithIcon?: boolean;\n}) => (\n\t<AppErrorContainer>\n\t\t{props.withIcon && <ErrorIcon label=\"Error\" size=\"xlarge\" />}\n\t\t{props.withIcon && <VerticalSpacer size={5} />}\n\t\t{props.children}\n\t</AppErrorContainer>\n);\n","import { colors } from \"@atlaskit/theme\";\n\nexport enum AsyncActionStatus {\n\tIDLE = \"idle\",\n\tLOADING = \"loading\",\n\tSUCCEEDED = \"succeeded\",\n\tFAILED = \"failed\"\n}\n\nexport enum NoteActions {\n\tGET_ALL_NOTES = \"notes/all\",\n\tCREATE_NOTE = \"notes/create\",\n\tUPDATE_NOTE = \"notes/update\",\n\tGET_ARCHIVED_NOTES = \"notes/archived\",\n\tGET_DELETED_NOTES = \"notes/deleted\",\n\tARCHIVE_NOTE = \"notes/archive\",\n\tPIN_NOTE = \"notes/pin\",\n\tUNPIN_NOTE = \"notes/unpin\",\n\tUNARCHIVE_NOTE = \"notes/unarchive\",\n\tDELETE_NOTE = \"notes/delete\",\n\tRESTORE_NOTE = \"notes/restore\"\n}\n\nexport const NoteColors: Record<string, string> = {\n\tTRANSPARENT: colors.N0,\n\tVIOLET: colors.P75,\n\tINDIGO: colors.B75,\n\tBLUE: colors.T75,\n\tGREEN: colors.G75,\n\tYELLOW: colors.Y75,\n\tORANGE: \"#F9D3AE\",\n\tRED: colors.R75,\n\tPINK: \"#F9D8E8\",\n\tBROWN: \"#C6B7B0\"\n};\n\nexport type NoteFilters = {\n\tarchived?: boolean;\n\tdeleted?: boolean;\n};\n\nexport type NoteSliceState = {\n\tnotes: Record<string, Note>;\n\tstatus: Record<NoteActions, AsyncActionStatus>;\n\terror: string | null;\n\tfilters: NoteFilters;\n};\n\nexport type Note = {\n\tid: string;\n\ttitle: string;\n\tarchived: boolean;\n\tpinned: boolean;\n\tcolor: string;\n\tcontent: string;\n\tauthorId: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tdeleted: boolean;\n};\n\nexport type CreateNoteInput = {\n\ttitle: string;\n\tcontent: string;\n};\n\nexport type UpdateNoteInput = {\n\tnoteId: string;\n\tcolor?: string;\n\tcontent?: string;\n\ttitle?: string;\n\tarchived?: boolean;\n\tpinned?: boolean;\n\tdeleted?: boolean;\n};\n\nexport enum UserActions {\n\tLOGIN = \"user/login\",\n\tSIGNUP = \"user/signup\",\n\tME = \"user/me\",\n\tLOGOUT = \"user/logout\",\n\tUPDATE_AVATAR = \"user/avatar\"\n}\n\nexport type User = {\n\tid: string;\n\tname: string;\n\temail: string;\n\tusername: string;\n\tavatar: string;\n};\n\nexport type UserSliceState = {\n\tuser: User | null;\n\tstatus: Record<UserActions, AsyncActionStatus>;\n\terror: string | null;\n};\n\nexport type UserLoginInput = {\n\tusername: string;\n\tpassword: string;\n};\n\nexport type CreateUserInput = {\n\tname: string;\n\tusername: string;\n\temail: string;\n\tpassword: string;\n};\n\nexport enum DrawerModes {\n\tPROFILE = \"PROFILE\",\n\tSETTINGS = \"SETTINGS\",\n\tCLOSED = \"CLOSED\"\n}\n\nexport interface AppIconProps {\n\tfilled?: boolean;\n}\n\nexport interface GetNotesFilter {\n\tarchived?: boolean;\n\tdeleted?: boolean;\n}\n\nexport type FlagData = {\n\tdescription?: string;\n\tappearance: \"success\" | \"error\";\n\ttitle: string;\n};\n","import { colors } from \"@atlaskit/theme\";\nimport styled from \"styled-components\";\n\nexport const AppCard = styled.div`\n\twidth: calc(100% - 42px);\n\tborder: 1px solid ${colors.N50};\n\tpadding: 20px;\n\tborder-radius: 5px;\n\tbackground-color: ${colors.N0};\n\tcursor: pointer;\n`;\n\nexport const AppCardFooter = styled.div`\n\tdisplay: flex;\n\tflex-direction: row-reverse;\n\tjustify-content: space-between;\n\theight: 30px;\n\talign-items: center;\n`;\n","import Tooltip from \"@atlaskit/tooltip\";\nimport React from \"react\";\nimport { useFlag } from \"../utils/context\";\nimport { useUpdateNoteMutation } from \"../utils/hooks\";\nimport { AppIconButton } from \"./AppButton\";\nimport ArchiveIcon from \"./icons/ArchiveIcon\";\n\ninterface ArchiveNoteProps {\n\tnoteId: string;\n\tarchived: boolean;\n}\n\nexport const ArchiveNote = ({ noteId, archived }: ArchiveNoteProps) => {\n\tconst { addFlag } = useFlag();\n\tconst [toggleArchive, { isLoading }] = useUpdateNoteMutation({\n\t\tonSuccess: (data) =>\n\t\t\taddFlag({\n\t\t\t\ttitle: `Note ${data.archived ? \"Archived\" : \"Unarchived\"}!`,\n\t\t\t\tappearance: \"success\"\n\t\t\t})\n\t});\n\n\treturn (\n\t\t<Tooltip\n\t\t\tcontent={`${archived ? \"Unarchive\" : \"Archive\"} note`}\n\t\t\tposition=\"bottom\"\n\t\t>\n\t\t\t<AppIconButton\n\t\t\t\tspacing=\"none\"\n\t\t\t\ticonBefore={<ArchiveIcon filled={archived} />}\n\t\t\t\tappearance=\"subtle\"\n\t\t\t\tisLoading={isLoading}\n\t\t\t\tisDisabled={isLoading}\n\t\t\t\tonClick={() => toggleArchive({ noteId, archived: !archived })}\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n};\n","import Icon from \"@atlaskit/icon\";\nimport React from \"react\";\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"refresh\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M20.3 13.43a1 1 0 0 0-1.25.65A7.14 7.14 0 0 1 12.18 19 7.1 7.1 0 0 1 5 12a7.1 7.1 0 0 1 7.18-7 7.26 7.26 0 0 1 4.65 1.67l-2.17-.36a1 1 0 0 0-1.15.83 1 1 0 0 0 .83 1.15l4.24.7h.17a1 1 0 0 0 .34-.06.33.33 0 0 0 .1-.06.78.78 0 0 0 .2-.11l.09-.11c0-.05.09-.09.13-.15s0-.1.05-.14a1.34 1.34 0 0 0 .07-.18l.75-4a1 1 0 0 0-2-.38l-.27 1.45A9.21 9.21 0 0 0 12.18 3 9.1 9.1 0 0 0 3 12a9.1 9.1 0 0 0 9.18 9A9.12 9.12 0 0 0 21 14.68a1 1 0 0 0-.7-1.25z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default () => <Icon glyph={OutlinedIcon} label=\"restore\" />;\n","import Tooltip from \"@atlaskit/tooltip\";\nimport React from \"react\";\nimport { useFlag } from \"../utils/context\";\nimport { useUpdateNoteMutation } from \"../utils/hooks\";\nimport { AppIconButton } from \"./AppButton\";\nimport RestoreIcon from \"./icons/RestoreIcon\";\nimport TrashIcon from \"./icons/TrashIcon\";\n\ninterface DeleteNoteProps {\n\tnoteId: string;\n\tdeleted: boolean;\n}\n\nexport const DeleteNote = ({ noteId, deleted }: DeleteNoteProps) => {\n\tconst { addFlag } = useFlag();\n\tconst [toggleDelete, { isLoading }] = useUpdateNoteMutation({\n\t\tonSuccess: (data) =>\n\t\t\taddFlag({\n\t\t\t\ttitle: `Note ${data.deleted ? \"moved to Trash\" : \"Restored\"}!`,\n\t\t\t\tappearance: \"success\"\n\t\t\t})\n\t});\n\n\tconst handleClick = () => toggleDelete({ noteId, deleted: !deleted });\n\n\treturn (\n\t\t<Tooltip\n\t\t\tcontent={`${deleted ? \"Restore\" : \"Delete\"} note`}\n\t\t\tposition=\"bottom\"\n\t\t>\n\t\t\t<AppIconButton\n\t\t\t\tspacing=\"none\"\n\t\t\t\ticonBefore={deleted ? <RestoreIcon /> : <TrashIcon />}\n\t\t\t\tappearance=\"subtle\"\n\t\t\t\tisLoading={isLoading}\n\t\t\t\tisDisabled={isLoading}\n\t\t\t\tonClick={handleClick}\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n};\n","import Icon from \"@atlaskit/icon\";\nimport React from \"react\";\nimport { AppIconProps } from \"../../utils/types\";\n\nconst FilledIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"bookmark\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M6 21a1 1 0 0 1-.49-.13A1 1 0 0 1 5 20V5.33A2.28 2.28 0 0 1 7.2 3h9.6A2.28 2.28 0 0 1 19 5.33V20a1 1 0 0 1-.5.86 1 1 0 0 1-1 0l-5.67-3.21-5.33 3.2A1 1 0 0 1 6 21z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"bookmark\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M6.09 21.06a1 1 0 0 1-1-1L4.94 5.4a2.26 2.26 0 0 1 2.18-2.35L16.71 3a2.27 2.27 0 0 1 2.23 2.31l.14 14.66a1 1 0 0 1-.49.87 1 1 0 0 1-1 0l-5.7-3.16-5.29 3.23a1.2 1.2 0 0 1-.51.15zm5.76-5.55a1.11 1.11 0 0 1 .5.12l4.71 2.61-.12-12.95c0-.2-.13-.34-.21-.33l-9.6.09c-.08 0-.19.13-.19.33l.12 12.9 4.28-2.63a1.06 1.06 0 0 1 .51-.14z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default ({ filled }: AppIconProps) => (\n\t<Icon glyph={filled ? FilledIcon : OutlinedIcon} label=\"bookmark\" />\n);\n","import Tooltip from \"@atlaskit/tooltip\";\nimport React from \"react\";\nimport { useFlag } from \"../utils/context\";\nimport { useUpdateNoteMutation } from \"../utils/hooks\";\nimport { AppIconButton } from \"./AppButton\";\nimport BookmarkIcon from \"./icons/BookmarkIcon\";\n\ninterface PinNoteProps {\n\tnoteId: string;\n\tpinned: boolean;\n}\n\nexport const PinNote = ({ noteId, pinned }: PinNoteProps) => {\n\tconst { addFlag } = useFlag();\n\tconst [togglePin, { isLoading }] = useUpdateNoteMutation({\n\t\tonSuccess: (data) =>\n\t\t\taddFlag({\n\t\t\t\ttitle: `Note ${data.pinned ? \"Pinned\" : \"Unpinned\"}!`,\n\t\t\t\tappearance: \"success\"\n\t\t\t})\n\t});\n\n\tconst handleClick = () => togglePin({ noteId, pinned: !pinned });\n\n\treturn (\n\t\t<Tooltip content={`${pinned ? \"Unpin\" : \"Pin\"} note`} position=\"bottom\">\n\t\t\t<AppIconButton\n\t\t\t\tspacing=\"none\"\n\t\t\t\ticonBefore={<BookmarkIcon filled={pinned} />}\n\t\t\t\tappearance=\"subtle\"\n\t\t\t\tisLoading={isLoading}\n\t\t\t\tisDisabled={isLoading}\n\t\t\t\tonClick={handleClick}\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n};\n","import Icon from \"@atlaskit/icon\";\nimport React from \"react\";\nimport { AppIconProps } from \"../../utils/types\";\n\nconst FilledIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"color-palette\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M19.54 5.08A10.61 10.61 0 0 0 11.91 2a10 10 0 0 0-.05 20 2.58 2.58 0 0 0 2.53-1.89 2.52 2.52 0 0 0-.57-2.28.5.5 0 0 1 .37-.83h1.65A6.15 6.15 0 0 0 22 11.33a8.48 8.48 0 0 0-2.46-6.25zm-12.7 9.66a1.5 1.5 0 1 1 .4-2.08 1.49 1.49 0 0 1-.4 2.08zM8.3 9.25a1.5 1.5 0 1 1-.55-2 1.5 1.5 0 0 1 .55 2zM11 7a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 11 7zm5.75.8a1.5 1.5 0 1 1 .55-2 1.5 1.5 0 0 1-.55 2z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nconst OutlinedIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"currentColor\"\n\t>\n\t\t<g data-name=\"Layer 2\">\n\t\t\t<g data-name=\"color-palette\">\n\t\t\t\t<rect width=\"24\" height=\"24\" opacity=\"0\" />\n\t\t\t\t<path d=\"M19.54 5.08A10.61 10.61 0 0 0 11.91 2a10 10 0 0 0-.05 20 2.58 2.58 0 0 0 2.53-1.89 2.52 2.52 0 0 0-.57-2.28.5.5 0 0 1 .37-.83h1.65A6.15 6.15 0 0 0 22 11.33a8.48 8.48 0 0 0-2.46-6.25zM15.88 15h-1.65a2.49 2.49 0 0 0-1.87 4.15.49.49 0 0 1 .12.49c-.05.21-.28.34-.59.36a8 8 0 0 1-7.82-9.11A8.1 8.1 0 0 1 11.92 4H12a8.47 8.47 0 0 1 6.1 2.48 6.5 6.5 0 0 1 1.9 4.77A4.17 4.17 0 0 1 15.88 15z\" />\n\t\t\t\t<circle cx=\"12\" cy=\"6.5\" r=\"1.5\" />\n\t\t\t\t<path d=\"M15.25 7.2a1.5 1.5 0 1 0 2.05.55 1.5 1.5 0 0 0-2.05-.55z\" />\n\t\t\t\t<path d=\"M8.75 7.2a1.5 1.5 0 1 0 .55 2.05 1.5 1.5 0 0 0-.55-2.05z\" />\n\t\t\t\t<path d=\"M6.16 11.26a1.5 1.5 0 1 0 2.08.4 1.49 1.49 0 0 0-2.08-.4z\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n);\n\nexport default ({ filled }: AppIconProps) => (\n\t<Icon glyph={filled ? FilledIcon : OutlinedIcon} label=\"color-palette\" />\n);\n","import Popup from \"@atlaskit/popup\";\nimport { colors } from \"@atlaskit/theme\";\nimport Tooltip from \"@atlaskit/tooltip\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useFlag } from \"../utils/context\";\nimport { useUpdateNoteMutation } from \"../utils/hooks\";\nimport { NoteColors } from \"../utils/types\";\nimport { AppIconButton } from \"./AppButton\";\nimport PaletteIcon from \"./icons/PaletteIcon\";\n\nexport const Palette = styled.div`\n\tpadding: 10px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 150px;\n\tflex-wrap: wrap;\n`;\n\nexport const Color = styled.div`\n\tflex: 1;\n\tmargin: 3px;\n\tborder: 1px solid ${colors.N50};\n\tmin-width: 20px;\n\theight: 20px;\n\tcursor: pointer;\n`;\n\ninterface UpdateColorProps {\n\tnoteId: string;\n}\n\nexport const UpdateColor = ({ noteId }: UpdateColorProps) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst { addFlag } = useFlag();\n\tconst [updateColor, { isLoading }] = useUpdateNoteMutation({\n\t\tonSuccess: () =>\n\t\t\taddFlag({ title: \"Note Color Changed!\", appearance: \"success\" })\n\t});\n\n\tconst handleColorClick = (color: string) => () =>\n\t\tupdateColor({ color, noteId });\n\n\treturn (\n\t\t<Popup\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={() => setIsOpen(false)}\n\t\t\tplacement=\"top-start\"\n\t\t\tcontent={() => (\n\t\t\t\t<Palette>\n\t\t\t\t\t{Object.keys(NoteColors).map((color) => (\n\t\t\t\t\t\t<Color\n\t\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\t\tstyle={{ backgroundColor: NoteColors[color] }}\n\t\t\t\t\t\t\tonClick={handleColorClick(color)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Palette>\n\t\t\t)}\n\t\t\ttrigger={({ ref, ...triggerProps }) => (\n\t\t\t\t<Tooltip content=\"Change Color\" position=\"bottom\">\n\t\t\t\t\t<AppIconButton\n\t\t\t\t\t\t{...triggerProps}\n\t\t\t\t\t\tinnerRef={ref as any}\n\t\t\t\t\t\tonClick={() => setIsOpen(!isOpen)}\n\t\t\t\t\t\ticonBefore={<PaletteIcon />}\n\t\t\t\t\t\tappearance={isOpen ? \"default\" : \"subtle\"}\n\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\tisDisabled={isLoading}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t)}\n\t\t/>\n\t);\n};\n","import { ButtonGroup } from \"@atlaskit/button\";\nimport React, { Fragment } from \"react\";\nimport { Note } from \"../utils/types\";\nimport { AppCardFooter } from \"./AppCard\";\nimport { ArchiveNote } from \"./ArchiveNote\";\nimport { DeleteNote } from \"./DeleteNote\";\nimport { PinNote } from \"./PinNote\";\nimport { UpdateColor } from \"./UpdateColor\";\n\ninterface NoteCardFooterProps {\n\tnote: Note;\n\tisVisible: boolean;\n}\n\nexport const NoteCardFooter = ({ isVisible, note }: NoteCardFooterProps) => (\n\t<AppCardFooter>\n\t\t{isVisible && (\n\t\t\t<Fragment>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<DeleteNote noteId={note.id} deleted={note.deleted} />\n\t\t\t\t</ButtonGroup>\n\t\t\t\t{!note.deleted && (\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t<ArchiveNote noteId={note.id} archived={note.archived} />\n\t\t\t\t\t\t<PinNote noteId={note.id} pinned={note.pinned} />\n\t\t\t\t\t\t<UpdateColor noteId={note.id} />\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t)}\n\t</AppCardFooter>\n);\n","import React, { useRef } from \"react\";\nimport { useClickAway, useHover } from \"react-use\";\nimport styled from \"styled-components\";\nimport { Note, NoteColors } from \"../utils/types\";\nimport { AppCard } from \"./AppCard\";\nimport { NoteCardFooter } from \"./NoteCardFooter\";\nimport { VerticalSpacer } from \"./VerticalSpacer\";\n\nexport const NoteTitle = styled.h3`\n\tfont-weight: bold;\n\tfont-size: 18px;\n\tfont-family: \"Montserrat\";\n`;\n\nexport const NoteBody = styled.div`\n\tfont-size: 14px;\n\tword-break: break-word;\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: 15;\n\t-webkit-box-orient: vertical;\n\toverflow: hidden;\n`;\n\ninterface NoteProps {\n\tnote: Note;\n\topenView?: () => void;\n\tonClickAway?: () => void;\n}\n\nexport const NoteCard = ({ note, openView, onClickAway }: NoteProps) => {\n\tconst appCardRef = useRef<HTMLDivElement>(null);\n\n\tuseClickAway(appCardRef, () => {\n\t\tif (onClickAway) onClickAway();\n\t});\n\n\tconst NoteCardElement = (hovered: boolean) => (\n\t\t<AppCard\n\t\t\tclassName=\"note-card\"\n\t\t\tstyle={{ backgroundColor: NoteColors[note.color] }}\n\t\t\tinnerRef={appCardRef as any}\n\t\t>\n\t\t\t<div onClick={openView}>\n\t\t\t\t{note.title && <NoteTitle>{note.title}</NoteTitle>}\n\t\t\t\t{note.title && note.content && <VerticalSpacer />}\n\t\t\t\t{note.content && (\n\t\t\t\t\t<NoteBody>\n\t\t\t\t\t\t{note.content.split(\"\\n\").map((text, i) => (\n\t\t\t\t\t\t\t<p key={i}>{text}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</NoteBody>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<VerticalSpacer size={20} />\n\t\t\t<NoteCardFooter isVisible={hovered} note={note} />\n\t\t</AppCard>\n\t);\n\n\tconst [HoverableNoteCard] = useHover(NoteCardElement);\n\n\treturn HoverableNoteCard;\n};\n","import { ButtonGroup } from \"@atlaskit/button\";\nimport React, { Fragment, useRef, useState } from \"react\";\nimport { queryCache, useMutation } from \"react-query\";\nimport TextArea from \"react-textarea-autosize\";\nimport { useClickAway } from \"react-use\";\nimport styled from \"styled-components\";\nimport { createNote } from \"../api/notes\";\nimport { useFlag } from \"../utils/context\";\nimport { Note } from \"../utils/types\";\nimport { AppButton } from \"./AppButton\";\nimport { AppCard, AppCardFooter } from \"./AppCard\";\nimport { AppError } from \"./AppError\";\nimport { VerticalSpacer } from \"./VerticalSpacer\";\n\nexport const CreateNoteWrapper = styled.div`\n\twidth: calc(100vw - 40px);\n\tpadding: 0px 20px;\n\tpadding-top: 90px;\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n\nexport const NoteInputContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\tmax-width: 700px;\n\talign-self: center;\n`;\n\nexport const ContentTextArea = styled(TextArea)`\n\tbackground-color: transparent;\n\tborder-color: transparent;\n\twidth: 100%;\n\tfont-size: 18px;\n\tfont-family: \"Montserrat\";\n\tresize: none;\n\n\t&:focus {\n\t\toutline-style: unset;\n\t}\n\n\t&.withTitle {\n\t\tfont-size: 14px;\n\t}\n`;\n\nexport const TitleTextInput = styled.input`\n\tbackground-color: transparent;\n\tborder-color: transparent;\n\twidth: 100%;\n\tfont-size: 18px;\n\tfont-family: \"Montserrat\";\n\tfont-weight: bold;\n\n\t&:focus {\n\t\toutline-style: unset;\n\t}\n`;\n\nexport const CreateNote = () => {\n\tconst inputDivRef = useRef<HTMLDivElement>(null);\n\tconst { addFlag } = useFlag();\n\tconst [title, setTitle] = useState(\"\");\n\tconst [content, setContent] = useState(\"\");\n\tconst [isTitleVisible, setIsTitleVisible] = useState(false);\n\tconst [errorMsg, setErrorMsg] = useState<string>();\n\n\tconst [create, { isLoading }] = useMutation(createNote, {\n\t\tonError: (err) => setErrorMsg(err.message),\n\t\tonSuccess: (data) => {\n\t\t\tqueryCache.setQueryData<Note[]>(\"notes\", (notes) =>\n\t\t\t\t[data].concat(...(notes || []))\n\t\t\t);\n\t\t\taddFlag({ title: \"Note Added!\", appearance: \"success\" });\n\t\t\treset();\n\t\t}\n\t});\n\n\tconst saveNote = () => {\n\t\tif (!!title || !!content) {\n\t\t\tcreate({ title, content });\n\t\t} else {\n\t\t\tsetErrorMsg(\"Both Title and Content cannot be Empty!\");\n\t\t}\n\t};\n\n\tconst reset = () => {\n\t\tsetTitle(\"\");\n\t\tsetContent(\"\");\n\t\tsetErrorMsg(undefined);\n\t\tsetIsTitleVisible(false);\n\t};\n\n\tuseClickAway(inputDivRef, () => {\n\t\tif (!title && !content) reset();\n\t});\n\n\treturn (\n\t\t<CreateNoteWrapper>\n\t\t\t<NoteInputContainer>\n\t\t\t\t<div style={{ width: \"inherit\" }} ref={inputDivRef}>\n\t\t\t\t\t<AppCard style={{ cursor: \"unset\" }}>\n\t\t\t\t\t\t{isTitleVisible && (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<TitleTextInput\n\t\t\t\t\t\t\t\t\tplaceholder=\"Title\"\n\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<VerticalSpacer size={10} />\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ContentTextArea\n\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\tonChange={(e) => setContent(e.target.value)}\n\t\t\t\t\t\t\tplaceholder=\"Take a Note...\"\n\t\t\t\t\t\t\tonFocus={() => setIsTitleVisible(true)}\n\t\t\t\t\t\t\tclassName={isTitleVisible ? \"withTitle\" : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{isTitleVisible && (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t\t\t\t<AppCardFooter>\n\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t<AppButton\n\t\t\t\t\t\t\t\t\t\t\tspacing=\"compact\"\n\t\t\t\t\t\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={saveNote}\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t\t\tisDisabled={isLoading}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t</AppButton>\n\t\t\t\t\t\t\t\t\t\t<AppButton spacing=\"compact\" onClick={reset}>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</AppButton>\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t{errorMsg && <AppError>{errorMsg}</AppError>}\n\t\t\t\t\t\t\t\t</AppCardFooter>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</AppCard>\n\t\t\t\t</div>\n\t\t\t</NoteInputContainer>\n\t\t</CreateNoteWrapper>\n\t);\n};\n","import { colors } from \"@atlaskit/theme\";\nimport React, { useRef, useState } from \"react\";\nimport { queryCache, useMutation } from \"react-query\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport styled from \"styled-components\";\nimport { updateNote } from \"../api/notes\";\nimport { useFlag } from \"../utils/context\";\nimport { Note, NoteColors } from \"../utils/types\";\nimport { AppCard } from \"./AppCard\";\nimport AppLoader from \"./AppLoader\";\nimport { ContentTextArea, TitleTextInput } from \"./CreateNote\";\nimport { NoteCardFooter } from \"./NoteCardFooter\";\nimport { VerticalSpacer } from \"./VerticalSpacer\";\n\ninterface ViewNoteProps {\n\tnote: Note;\n\tonClose: () => void;\n}\n\nconst ViewNoteWrapper = styled.div`\n\tposition: fixed;\n\tz-index: 200;\n\ttop: 0;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: ${colors.N900}88;\n`;\n\nconst NoteCardContainer = styled.div<{ width: number }>`\n\twidth: ${({ width }) => (width > 620 ? \"600px\" : \"95vw\")};\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nexport const ViewNote = ({ note, onClose }: ViewNoteProps) => {\n\tconst noteCardContainerRef = useRef<HTMLDivElement>(null);\n\tconst { width } = useWindowSize();\n\tconst { addFlag } = useFlag();\n\tconst [update, { isLoading }] = useMutation(updateNote, {\n\t\tonSuccess(data) {\n\t\t\tqueryCache.setQueryData<Note[]>(\n\t\t\t\tnote.archived ? [\"notes\", { archived: true }] : \"notes\",\n\t\t\t\t(notes) => notes?.map((note) => (note.id === data.id ? data : note))\n\t\t\t);\n\n\t\t\taddFlag({ title: \"Note Updated!\", appearance: \"success\" });\n\t\t}\n\t});\n\n\tconst [title, setTitle] = useState(note.title);\n\tconst [content, setContent] = useState(note.content);\n\n\tconst handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\te.persist();\n\t\tconst { pageX, pageY } = e;\n\t\tconst rect = noteCardContainerRef.current!.getBoundingClientRect();\n\t\tconst { top, bottom, left, right } = rect;\n\t\tif (!(top < pageY && bottom > pageY && left < pageX && right > pageX)) {\n\t\t\tif (title !== note.title || content !== note.content)\n\t\t\t\tupdate({ title, content, noteId: note.id });\n\n\t\t\tonClose();\n\t\t}\n\t};\n\n\treturn (\n\t\t<ViewNoteWrapper onClick={handleClick}>\n\t\t\t<NoteCardContainer innerRef={noteCardContainerRef as any} width={width}>\n\t\t\t\t<AppCard\n\t\t\t\t\tclassName=\"note-card\"\n\t\t\t\t\tstyle={{ backgroundColor: NoteColors[note.color], cursor: \"unset\" }}\n\t\t\t\t>\n\t\t\t\t\t<TitleTextInput\n\t\t\t\t\t\tplaceholder=\"Title\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t{note.title && note.content && <VerticalSpacer />}\n\t\t\t\t\t{note.content && (\n\t\t\t\t\t\t<ContentTextArea\n\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\tonChange={(e) => setContent(e.target.value)}\n\t\t\t\t\t\t\tplaceholder=\"Take a Note...\"\n\t\t\t\t\t\t\tclassName=\"withTitle\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{isLoading && <AppLoader />}\n\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t<NoteCardFooter isVisible note={note} />\n\t\t\t\t</AppCard>\n\t\t\t</NoteCardContainer>\n\t\t</ViewNoteWrapper>\n\t);\n};\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { useWindowSize } from \"react-use\";\nimport styled from \"styled-components\";\nimport { Note } from \"../utils/types\";\nimport { NoteCard } from \"./NoteCard\";\nimport { ViewNote } from \"./ViewNote\";\n\nconst listStyles = {\n\tpadding: 20,\n\tdisplay: \"grid\",\n\tgridGap: 10,\n\tgridTemplateColumns: \"repeat(auto-fill, minmax(275px, 1fr))\",\n\tgridAutoRows: 0,\n\twidth: \"calc(100vw - 40px)\"\n};\n\nexport const ListItem = styled.div`\n\tposition: relative;\n\toverflow: hidden;\n`;\n\nexport const ListLabel = styled.div`\n\tpadding-left: 20px;\n\tfont-weight: bold;\n\ttext-transform: uppercase;\n`;\n\ninterface NoteListProps {\n\tnotes: Note[];\n\tpinned?: boolean;\n}\n\nexport const NoteList = ({ notes, pinned }: NoteListProps) => {\n\tconst [selectedNote, setselectedNote] = useState<Note>();\n\tconst gridRef = useRef<HTMLDivElement>(null);\n\tconst { width } = useWindowSize();\n\n\tconst resizeMasonryItem = (item: HTMLDivElement) => {\n\t\tlet grid = gridRef.current!;\n\t\tlet rowGap = parseInt(\n\t\t\twindow.getComputedStyle(grid).getPropertyValue(\"grid-row-gap\")\n\t\t);\n\t\tlet rowHeight = parseInt(\n\t\t\twindow.getComputedStyle(grid).getPropertyValue(\"grid-auto-rows\")\n\t\t);\n\n\t\tlet noteCard = item.querySelector<HTMLDivElement>(\".note-card\")!;\n\t\tlet rowSpan = Math.ceil(\n\t\t\t(noteCard.getBoundingClientRect().height + rowGap) / (rowHeight + rowGap)\n\t\t);\n\n\t\titem.style.gridRowEnd = `span ${rowSpan}`;\n\t};\n\n\tconst resizeAllMasonryItems = () => {\n\t\tArray.from(gridRef.current?.children || []).forEach((elem) =>\n\t\t\tresizeMasonryItem(elem as HTMLDivElement)\n\t\t);\n\t};\n\n\tuseEffect(resizeAllMasonryItems, [width, notes]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{!!pinned && <ListLabel>Pinned Notes</ListLabel>}\n\t\t\t<div style={listStyles} ref={gridRef}>\n\t\t\t\t{notes\n\t\t\t\t\t.filter((note) => note.pinned === !!pinned)\n\t\t\t\t\t.map((note) => (\n\t\t\t\t\t\t<ListItem key={note.id}>\n\t\t\t\t\t\t\t<NoteCard note={note} openView={() => setselectedNote(note)} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t\t{!!pinned && <ListLabel>Other Notes</ListLabel>}\n\t\t\t{selectedNote && (\n\t\t\t\t<ViewNote\n\t\t\t\t\tnote={selectedNote}\n\t\t\t\t\tonClose={() => setselectedNote(undefined)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { AppError } from \"../components/AppError\";\nimport AppLoader from \"../components/AppLoader\";\nimport { CreateNote } from \"../components/CreateNote\";\nimport { NoteList } from \"../components/NoteList\";\nimport { VerticalSpacer } from \"../components/VerticalSpacer\";\nimport { useAllNotesQuery } from \"../utils/hooks\";\n\nexport const HomeContainer = styled.div`\n\twidth: 100vw;\n\talign-self: flex-start;\n`;\n\nexport const HelperText = styled.div`\n\ttext-align: center;\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n`;\n\nexport const HomePage = () => {\n\tconst { error, data, isLoading } = useAllNotesQuery();\n\n\treturn (\n\t\t<HomeContainer>\n\t\t\t<CreateNote />\n\t\t\t{isLoading && <AppLoader />}\n\t\t\t{data && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t{data.filter((note) => note.pinned).length > 0 && (\n\t\t\t\t\t\t<NoteList notes={data} pinned />\n\t\t\t\t\t)}\n\t\t\t\t\t<NoteList notes={data} pinned={false} />\n\t\t\t\t\t{data.length === 0 && <HelperText>No Notes Available</HelperText>}\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t{error && <AppError>{error.message}</AppError>}\n\t\t</HomeContainer>\n\t);\n};\n","import React, { Fragment } from \"react\";\nimport { AppError } from \"../components/AppError\";\nimport AppLoader from \"../components/AppLoader\";\nimport { NoteList } from \"../components/NoteList\";\nimport { VerticalSpacer } from \"../components/VerticalSpacer\";\nimport { useArchivedNotesQuery } from \"../utils/hooks\";\nimport { HelperText, HomeContainer } from \"./Home\";\n\nexport const ArchivePage = () => {\n\tconst { error, data, isLoading } = useArchivedNotesQuery();\n\n\treturn (\n\t\t<HomeContainer>\n\t\t\t<VerticalSpacer size={70} />\n\t\t\t{isLoading && <AppLoader />}\n\t\t\t{data && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<NoteList notes={data} />\n\t\t\t\t\t{data.length === 0 && <HelperText>No Notes in Archive</HelperText>}\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t{error && <AppError>{error.message}</AppError>}\n\t\t</HomeContainer>\n\t);\n};\n","import styled from \"styled-components\";\n\nexport const BottomLink = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n","import { colors } from \"@atlaskit/theme\";\nimport styled from \"styled-components\";\n\nexport const FormCard = styled.div`\n\tmin-width: 400px;\n\theight: calc(100vh - 60px);\n\tmax-width: 500px;\n\tpadding: 30px;\n\tborder-left: 1px solid ${colors.N50};\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\n\th1 {\n\t\tfont-weight: 300;\n\t\ttext-transform: uppercase;\n\t\tmargin-bottom: 20px;\n\t}\n`;\n","import styled from \"styled-components\";\n\nexport const IntegratedLogoContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\tmax-height: 200px;\n\timg {\n\t\tmax-width: 200px;\n\t\theight: auto;\n\t}\n`;\n","import Form, { ErrorMessage, Field, HelperMessage } from \"@atlaskit/form\";\nimport TextField from \"@atlaskit/textfield\";\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport IntegratedLogo from \"../assets/integrated-logo.svg\";\nimport { AppButton } from \"../components/AppButton\";\nimport { AppError } from \"../components/AppError\";\nimport { BottomLink } from \"../components/BottomLink\";\nimport { FormCard } from \"../components/FormCard\";\nimport { IntegratedLogoContainer } from \"../components/IntegratedLogo\";\nimport { VerticalSpacer } from \"../components/VerticalSpacer\";\nimport { useAuth } from \"../utils/context\";\nimport { useLoginMutation } from \"../utils/hooks\";\n\nconst usernameRegex = /^[a-zA-Z0-9]+$/;\nexport interface FormField {\n\ttype: \"text\" | \"email\" | \"password\";\n\tlabel: string;\n\tvalidate: (val?: string) => string | undefined;\n\thelperMessage?: string;\n}\n\nexport const loginFields: FormField[] = [\n\t{\n\t\tlabel: \"Username\",\n\t\ttype: \"text\",\n\t\tvalidate: (val) =>\n\t\t\t!val\n\t\t\t\t? \"Username is required!\"\n\t\t\t\t: !usernameRegex.test(val)\n\t\t\t\t? \"Only letters and numbers allowed!\"\n\t\t\t\t: undefined,\n\t\thelperMessage: \"You can use only letters and numbers\"\n\t},\n\t{\n\t\tlabel: \"Password\",\n\t\ttype: \"password\",\n\t\thelperMessage: \"You can use letters, numbers and symbols only\",\n\t\tvalidate: (val) =>\n\t\t\t!val\n\t\t\t\t? \"Password is required!\"\n\t\t\t\t: val.length < 8\n\t\t\t\t? \"Password should be greater than 8 chracters!\"\n\t\t\t\t: undefined\n\t}\n];\n\nexport const LoginPage = () => {\n\tconst { setIsAuthenticated } = useAuth();\n\tconst [errorMsg, setErrorMsg] = useState<string>();\n\tconst [login, { isLoading }] = useLoginMutation({\n\t\tonError: (err) => setErrorMsg(err.message),\n\t\tonSuccess: () => setIsAuthenticated(true)\n\t});\n\n\tconst handleSubmit = ({ username, password }: any) => {\n\t\tlogin({ username, password });\n\t};\n\n\treturn (\n\t\t<FormCard>\n\t\t\t<IntegratedLogoContainer>\n\t\t\t\t<img src={IntegratedLogo} alt=\"Hacknotes\" />\n\t\t\t</IntegratedLogoContainer>\n\t\t\t<h1>Login</h1>\n\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t{({ formProps }) => (\n\t\t\t\t\t<form {...formProps} noValidate>\n\t\t\t\t\t\t{loginFields.map((field) => (\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tkey={field.label}\n\t\t\t\t\t\t\t\tlabel={field.label}\n\t\t\t\t\t\t\t\tisRequired\n\t\t\t\t\t\t\t\tname={field.label.toLowerCase()}\n\t\t\t\t\t\t\t\tvalidate={field.validate}\n\t\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{({ fieldProps, error }) => (\n\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t{...fieldProps}\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{error && <ErrorMessage>{error}</ErrorMessage>}\n\t\t\t\t\t\t\t\t\t\t{!error && field.helperMessage && (\n\t\t\t\t\t\t\t\t\t\t\t<HelperMessage>{field.helperMessage}</HelperMessage>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t\t<AppButton\n\t\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tshouldFitContainer\n\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</AppButton>\n\t\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t\t<BottomLink>\n\t\t\t\t\t\t\t<div>Don't have an account?</div>\n\t\t\t\t\t\t\t<Link to=\"/signup\">Sign Up</Link>\n\t\t\t\t\t\t</BottomLink>\n\t\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t\t{errorMsg && <AppError>{errorMsg}</AppError>}\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</Form>\n\t\t</FormCard>\n\t);\n};\n","import Form, { ErrorMessage, Field, HelperMessage } from \"@atlaskit/form\";\nimport TextField from \"@atlaskit/textfield\";\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport IntegratedLogo from \"../assets/integrated-logo.svg\";\nimport { AppButton } from \"../components/AppButton\";\nimport { AppError } from \"../components/AppError\";\nimport { BottomLink } from \"../components/BottomLink\";\nimport { FormCard } from \"../components/FormCard\";\nimport { IntegratedLogoContainer } from \"../components/IntegratedLogo\";\nimport { VerticalSpacer } from \"../components/VerticalSpacer\";\nimport { useAuth } from \"../utils/context\";\nimport { useSignupMutation } from \"../utils/hooks\";\nimport { FormField, loginFields } from \"./Login\";\n\nconst emailRegex = /^([a-zA-Z0-9_\\-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\nexport const signupFields: FormField[] = [\n\t{\n\t\tlabel: \"Name\",\n\t\ttype: \"text\",\n\t\tvalidate: (val) => (!val ? \"Name is required!\" : undefined)\n\t},\n\t{\n\t\tlabel: \"Email\",\n\t\ttype: \"email\",\n\t\tvalidate: (val) =>\n\t\t\t!val\n\t\t\t\t? \"Email is required!\"\n\t\t\t\t: !emailRegex.test(val)\n\t\t\t\t? \"Please enter a valid email!\"\n\t\t\t\t: undefined\n\t},\n\t...loginFields\n];\n\nexport const SignupPage = () => {\n\tconst { setIsAuthenticated } = useAuth();\n\tconst [errorMsg, setErrorMsg] = useState<string>();\n\tconst [signup, { isLoading }] = useSignupMutation({\n\t\tonError: (err) => setErrorMsg(err.message),\n\t\tonSuccess: () => setIsAuthenticated(true)\n\t});\n\n\tconst handleSubmit = ({ username, password, email, name }: any) => {\n\t\tsignup({ username, password, email, name });\n\t};\n\n\treturn (\n\t\t<FormCard>\n\t\t\t<IntegratedLogoContainer>\n\t\t\t\t<img src={IntegratedLogo} alt=\"Hacknotes\" />\n\t\t\t</IntegratedLogoContainer>\n\t\t\t<h1>Sign Up</h1>\n\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t{({ formProps }) => (\n\t\t\t\t\t<form {...formProps} noValidate>\n\t\t\t\t\t\t{signupFields.map((field) => (\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tkey={field.label}\n\t\t\t\t\t\t\t\tlabel={field.label}\n\t\t\t\t\t\t\t\tisRequired\n\t\t\t\t\t\t\t\tname={field.label.toLowerCase()}\n\t\t\t\t\t\t\t\tvalidate={field.validate}\n\t\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{({ fieldProps, error }) => (\n\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t{...fieldProps}\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{error && <ErrorMessage>{error}</ErrorMessage>}\n\t\t\t\t\t\t\t\t\t\t{!error && field.helperMessage && (\n\t\t\t\t\t\t\t\t\t\t\t<HelperMessage>{field.helperMessage}</HelperMessage>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t\t<AppButton\n\t\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tshouldFitContainer\n\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</AppButton>\n\t\t\t\t\t\t<VerticalSpacer />\n\t\t\t\t\t\t<BottomLink>\n\t\t\t\t\t\t\t<div>Already have an account?</div>\n\t\t\t\t\t\t\t<Link to=\"/login\">Login</Link>\n\t\t\t\t\t\t</BottomLink>\n\t\t\t\t\t\t{errorMsg && <AppError>{errorMsg}</AppError>}\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</Form>\n\t\t</FormCard>\n\t);\n};\n","import React, { Fragment } from \"react\";\nimport { AppError } from \"../components/AppError\";\nimport AppLoader from \"../components/AppLoader\";\nimport { NoteList } from \"../components/NoteList\";\nimport { VerticalSpacer } from \"../components/VerticalSpacer\";\nimport { useDeletedNotesQuery } from \"../utils/hooks\";\nimport { HelperText, HomeContainer } from \"./Home\";\n\nexport const TrashPage = () => {\n\tconst { error, data, isLoading } = useDeletedNotesQuery();\n\n\treturn (\n\t\t<HomeContainer>\n\t\t\t<VerticalSpacer size={90} />\n\t\t\t<HelperText>Notes in trash will be deleted after 30 days</HelperText>\n\t\t\t<VerticalSpacer size={10} />\n\t\t\t{isLoading && <AppLoader />}\n\t\t\t{data && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<NoteList notes={data} />\n\t\t\t\t\t{data.length === 0 && <HelperText>No Notes in Trash</HelperText>}\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t{error && <AppError>{error.message}</AppError>}\n\t\t</HomeContainer>\n\t);\n};\n","import React from \"react\";\nimport { Redirect, Route, RouteProps, Switch } from \"react-router-dom\";\nimport { ArchivePage } from \"../pages/Archive\";\nimport { HomePage } from \"../pages/Home\";\nimport { LoginPage } from \"../pages/Login\";\nimport { SignupPage } from \"../pages/Signup\";\nimport { TrashPage } from \"../pages/Trash\";\nimport { useAuth } from \"../utils/context\";\n\nexport const AppRoutes = () => (\n\t<Switch>\n\t\t<PublicRoute path=\"/login\" component={LoginPage} exact />\n\t\t<PublicRoute path=\"/signup\" component={SignupPage} exact />\n\t\t<PrivateRoute path=\"/archive\" component={ArchivePage} exact />\n\t\t<PrivateRoute path=\"/trash\" component={TrashPage} exact />\n\t\t<PrivateRoute path=\"/\" component={HomePage} exact />\n\t</Switch>\n);\n\nexport const PrivateRoute = (props: RouteProps) => {\n\tconst { isAuthenticated } = useAuth();\n\tif (isAuthenticated) return <Route {...props} />;\n\telse return <Redirect to=\"/login\" />;\n};\n\nexport const PublicRoute = (props: RouteProps) => {\n\tconst { isAuthenticated } = useAuth();\n\tif (!isAuthenticated) return <Route {...props} />;\n\telse return <Redirect to=\"/\" />;\n};\n","import \"@atlaskit/css-reset/dist/bundle.css\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppLoader from \"./components/AppLoader\";\nimport { AppNav } from \"./components/AppNav\";\nimport { FlagProvider } from \"./components/FlagProvider\";\nimport { MainGraphic } from \"./components/MainGraphic\";\nimport { PageWrapper } from \"./components/PageWrapper\";\nimport { AppRoutes } from \"./routes\";\nimport { AuthProvider } from \"./utils/context\";\nimport { useMeQuery } from \"./utils/hooks\";\n\nexport const App = () => {\n\tconst [isAuthenticated, setIsAuthenticated] = useState<boolean>();\n\tuseMeQuery({\n\t\tonSuccess: () => setIsAuthenticated(true),\n\t\tonError: () => setIsAuthenticated(false)\n\t});\n\n\tif (typeof isAuthenticated !== \"undefined\") {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<PageWrapper>\n\t\t\t\t\t<FlagProvider>\n\t\t\t\t\t\t<AuthProvider value={{ isAuthenticated, setIsAuthenticated }}>\n\t\t\t\t\t\t\t{isAuthenticated ? <AppNav /> : <MainGraphic />}\n\t\t\t\t\t\t\t<AppRoutes />\n\t\t\t\t\t\t</AuthProvider>\n\t\t\t\t\t</FlagProvider>\n\t\t\t\t</PageWrapper>\n\t\t\t</BrowserRouter>\n\t\t);\n\t} else return <AppLoader />;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.07376b7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/integrated-logo.aa43db23.svg\";","module.exports = __webpack_public_path__ + \"static/media/wordmark.f69685ed.svg\";"],"sourceRoot":""}